"use strict";(self.webpackChunk_fp_tx_core=self.webpackChunk_fp_tx_core||[]).push([[9131],{7887:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>t,contentTitle:()=>s,default:()=>h,frontMatter:()=>d,metadata:()=>c,toc:()=>a});var l=i(3274),r=i(9779);const d={},s="Record",c={id:"modules/Record",title:"Record",description:"Instances",source:"@site/docs/modules/Record.md",sourceDirName:"modules",slug:"/modules/Record",permalink:"/modules/Record",draft:!1,unlisted:!1,editUrl:"https://github.com/fp-tx/core/blob/main/docs/modules/Record.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"ReadonlyTuple",permalink:"/modules/ReadonlyTuple"},next:{title:"Refinement",permalink:"/modules/Refinement"}},t={},a=[{value:"Instances",id:"instances",level:3},{value:"Conversions",id:"conversions",level:3},{value:"Filtering",id:"filtering",level:3},{value:"Folding",id:"folding",level:3},{value:"Mapping",id:"mapping",level:3},{value:"Traversing",id:"traversing",level:3},{value:"Type lambdas",id:"type-lambdas",level:3},{value:"Utilities",id:"utilities",level:3},{value:"Instances",id:"instances-1",level:2},{value:"<code>Compactable</code>",id:"compactable",level:3},{value:"Signature",id:"signature",level:4},{value:"Details",id:"details",level:4},{value:"License",id:"license",level:4},{value:"<code>Filterable</code>",id:"filterable",level:3},{value:"Signature",id:"signature-1",level:4},{value:"Details",id:"details-1",level:4},{value:"License",id:"license-1",level:4},{value:"<code>FilterableWithIndex</code>",id:"filterablewithindex",level:3},{value:"Signature",id:"signature-2",level:4},{value:"Details",id:"details-2",level:4},{value:"License",id:"license-2",level:4},{value:"<code>Functor</code>",id:"functor",level:3},{value:"Signature",id:"signature-3",level:4},{value:"Details",id:"details-3",level:4},{value:"License",id:"license-3",level:4},{value:"<code>FunctorWithIndex</code>",id:"functorwithindex",level:3},{value:"Signature",id:"signature-4",level:4},{value:"Details",id:"details-4",level:4},{value:"License",id:"license-4",level:4},{value:"<code>getDifferenceMagma</code>",id:"getdifferencemagma",level:3},{value:"Signature",id:"signature-5",level:4},{value:"Details",id:"details-5",level:4},{value:"Example",id:"example",level:4},{value:"License",id:"license-5",level:4},{value:"<code>getEq</code>",id:"geteq",level:3},{value:"Signature",id:"signature-6",level:4},{value:"Details",id:"details-6",level:4},{value:"Example",id:"example-1",level:4},{value:"License",id:"license-6",level:4},{value:"<code>getIntersectionSemigroup</code>",id:"getintersectionsemigroup",level:3},{value:"Signature",id:"signature-7",level:4},{value:"Details",id:"details-7",level:4},{value:"Example",id:"example-2",level:4},{value:"License",id:"license-7",level:4},{value:"<code>getMonoid</code>",id:"getmonoid",level:3},{value:"Signature",id:"signature-8",level:4},{value:"Details",id:"details-8",level:4},{value:"Example",id:"example-3",level:4},{value:"License",id:"license-8",level:4},{value:"<code>getShow</code>",id:"getshow",level:3},{value:"Signature",id:"signature-9",level:4},{value:"Details",id:"details-9",level:4},{value:"Example",id:"example-4",level:4},{value:"License",id:"license-9",level:4},{value:"<code>getUnionMonoid</code>",id:"getunionmonoid",level:3},{value:"Signature",id:"signature-10",level:4},{value:"Details",id:"details-10",level:4},{value:"Example",id:"example-5",level:4},{value:"License",id:"license-10",level:4},{value:"<code>getUnionSemigroup</code>",id:"getunionsemigroup",level:3},{value:"Signature",id:"signature-11",level:4},{value:"Details",id:"details-11",level:4},{value:"Example",id:"example-6",level:4},{value:"License",id:"license-11",level:4},{value:"Conversions",id:"conversions-1",level:2},{value:"<code>fromEntries</code>",id:"fromentries",level:3},{value:"Signature",id:"signature-12",level:4},{value:"Details",id:"details-12",level:4},{value:"Example",id:"example-7",level:4},{value:"License",id:"license-12",level:4},{value:"<code>toArray</code>",id:"toarray",level:3},{value:"Signature",id:"signature-13",level:4},{value:"Details",id:"details-13",level:4},{value:"Example",id:"example-8",level:4},{value:"License",id:"license-13",level:4},{value:"<code>toEntries</code>",id:"toentries",level:3},{value:"Signature",id:"signature-14",level:4},{value:"Details",id:"details-14",level:4},{value:"Example",id:"example-9",level:4},{value:"License",id:"license-14",level:4},{value:"Filtering",id:"filtering-1",level:2},{value:"<code>compact</code>",id:"compact",level:3},{value:"Signature",id:"signature-15",level:4},{value:"Details",id:"details-15",level:4},{value:"Example",id:"example-10",level:4},{value:"License",id:"license-15",level:4},{value:"<code>filter</code>",id:"filter",level:3},{value:"Signature",id:"signature-16",level:4},{value:"Details",id:"details-16",level:4},{value:"Example",id:"example-11",level:4},{value:"License",id:"license-16",level:4},{value:"<code>filterMap</code>",id:"filtermap",level:3},{value:"Signature",id:"signature-17",level:4},{value:"Details",id:"details-17",level:4},{value:"Example",id:"example-12",level:4},{value:"License",id:"license-17",level:4},{value:"<code>getWitherable</code>",id:"getwitherable",level:3},{value:"Signature",id:"signature-18",level:4},{value:"Details",id:"details-18",level:4},{value:"License",id:"license-18",level:4},{value:"<code>partition</code>",id:"partition",level:3},{value:"Signature",id:"signature-19",level:4},{value:"Details",id:"details-19",level:4},{value:"Example",id:"example-13",level:4},{value:"License",id:"license-19",level:4},{value:"<code>partitionMap</code>",id:"partitionmap",level:3},{value:"Signature",id:"signature-20",level:4},{value:"Details",id:"details-20",level:4},{value:"Example",id:"example-14",level:4},{value:"License",id:"license-20",level:4},{value:"<code>separate</code>",id:"separate",level:3},{value:"Signature",id:"signature-21",level:4},{value:"Details",id:"details-21",level:4},{value:"Example",id:"example-15",level:4},{value:"License",id:"license-21",level:4},{value:"<code>wilt</code>",id:"wilt",level:3},{value:"Signature",id:"signature-22",level:4},{value:"Details",id:"details-22",level:4},{value:"License",id:"license-22",level:4},{value:"<code>wither</code>",id:"wither",level:3},{value:"Signature",id:"signature-23",level:4},{value:"Details",id:"details-23",level:4},{value:"License",id:"license-23",level:4},{value:"Folding",id:"folding-1",level:2},{value:"<code>foldMap</code>",id:"foldmap",level:3},{value:"Signature",id:"signature-24",level:4},{value:"Details",id:"details-24",level:4},{value:"Example",id:"example-16",level:4},{value:"License",id:"license-24",level:4},{value:"<code>getFoldable</code>",id:"getfoldable",level:3},{value:"Signature",id:"signature-25",level:4},{value:"Details",id:"details-25",level:4},{value:"License",id:"license-25",level:4},{value:"<code>getFoldableWithIndex</code>",id:"getfoldablewithindex",level:3},{value:"Signature",id:"signature-26",level:4},{value:"Details",id:"details-26",level:4},{value:"License",id:"license-26",level:4},{value:"<code>reduce</code>",id:"reduce",level:3},{value:"Signature",id:"signature-27",level:4},{value:"Details",id:"details-27",level:4},{value:"Example",id:"example-17",level:4},{value:"License",id:"license-27",level:4},{value:"<code>reduceRight</code>",id:"reduceright",level:3},{value:"Signature",id:"signature-28",level:4},{value:"Details",id:"details-28",level:4},{value:"Example",id:"example-18",level:4},{value:"License",id:"license-28",level:4},{value:"Mapping",id:"mapping-1",level:2},{value:"<code>flap</code>",id:"flap",level:3},{value:"Signature",id:"signature-29",level:4},{value:"Details",id:"details-29",level:4},{value:"Example",id:"example-19",level:4},{value:"License",id:"license-29",level:4},{value:"<code>map</code>",id:"map",level:3},{value:"Signature",id:"signature-30",level:4},{value:"Details",id:"details-30",level:4},{value:"Example",id:"example-20",level:4},{value:"License",id:"license-30",level:4},{value:"Traversing",id:"traversing-1",level:2},{value:"<code>getTraversable</code>",id:"gettraversable",level:3},{value:"Signature",id:"signature-31",level:4},{value:"Details",id:"details-31",level:4},{value:"License",id:"license-31",level:4},{value:"<code>getTraversableWithIndex</code>",id:"gettraversablewithindex",level:3},{value:"Signature",id:"signature-32",level:4},{value:"Details",id:"details-32",level:4},{value:"License",id:"license-32",level:4},{value:"Type lambdas",id:"type-lambdas-1",level:2},{value:"<code>URI</code>",id:"uri",level:3},{value:"Signature",id:"signature-33",level:4},{value:"Details",id:"details-33",level:4},{value:"License",id:"license-33",level:4},{value:"<code>URI</code>",id:"uri-1",level:3},{value:"Signature",id:"signature-34",level:4},{value:"Details",id:"details-34",level:4},{value:"License",id:"license-34",level:4},{value:"Utilities",id:"utilities-1",level:2},{value:"<del><code>Foldable</code></del>",id:"foldable",level:3},{value:"Signature",id:"signature-35",level:4},{value:"Details",id:"details-35",level:4},{value:"License",id:"license-35",level:4},{value:"<del><code>FoldableWithIndex</code></del>",id:"foldablewithindex",level:3},{value:"Signature",id:"signature-36",level:4},{value:"Details",id:"details-36",level:4},{value:"License",id:"license-36",level:4},{value:"<del><code>Traversable</code></del>",id:"traversable",level:3},{value:"Signature",id:"signature-37",level:4},{value:"Details",id:"details-37",level:4},{value:"License",id:"license-37",level:4},{value:"<del><code>TraversableWithIndex</code></del>",id:"traversablewithindex",level:3},{value:"Signature",id:"signature-38",level:4},{value:"Details",id:"details-38",level:4},{value:"License",id:"license-38",level:4},{value:"<del><code>Witherable</code></del>",id:"witherable",level:3},{value:"Signature",id:"signature-39",level:4},{value:"Details",id:"details-39",level:4},{value:"License",id:"license-39",level:4},{value:"<code>collect</code>",id:"collect",level:3},{value:"Signature",id:"signature-40",level:4},{value:"Details",id:"details-40",level:4},{value:"Example",id:"example-21",level:4},{value:"License",id:"license-40",level:4},{value:"<code>deleteAt</code>",id:"deleteat",level:3},{value:"Signature",id:"signature-41",level:4},{value:"Details",id:"details-41",level:4},{value:"Example",id:"example-22",level:4},{value:"License",id:"license-41",level:4},{value:"<code>difference</code>",id:"difference",level:3},{value:"Signature",id:"signature-42",level:4},{value:"Details",id:"details-42",level:4},{value:"Example",id:"example-23",level:4},{value:"License",id:"license-42",level:4},{value:"<code>elem</code>",id:"elem",level:3},{value:"Signature",id:"signature-43",level:4},{value:"Details",id:"details-43",level:4},{value:"Example",id:"example-24",level:4},{value:"License",id:"license-43",level:4},{value:"<del><code>empty</code></del>",id:"empty",level:3},{value:"Signature",id:"signature-44",level:4},{value:"Details",id:"details-44",level:4},{value:"License",id:"license-44",level:4},{value:"<code>every</code>",id:"every",level:3},{value:"Signature",id:"signature-45",level:4},{value:"Details",id:"details-45",level:4},{value:"Example",id:"example-25",level:4},{value:"License",id:"license-45",level:4},{value:"<code>filterMapWithIndex</code>",id:"filtermapwithindex",level:3},{value:"Signature",id:"signature-46",level:4},{value:"Details",id:"details-46",level:4},{value:"Example",id:"example-26",level:4},{value:"License",id:"license-46",level:4},{value:"<code>filterWithIndex</code>",id:"filterwithindex",level:3},{value:"Signature",id:"signature-47",level:4},{value:"Details",id:"details-47",level:4},{value:"Example",id:"example-27",level:4},{value:"License",id:"license-47",level:4},{value:"<code>foldMapWithIndex</code>",id:"foldmapwithindex",level:3},{value:"Signature",id:"signature-48",level:4},{value:"Details",id:"details-48",level:4},{value:"Example",id:"example-28",level:4},{value:"License",id:"license-48",level:4},{value:"<code>fromFoldable</code>",id:"fromfoldable",level:3},{value:"Signature",id:"signature-49",level:4},{value:"Details",id:"details-49",level:4},{value:"License",id:"license-49",level:4},{value:"<code>fromFoldableMap</code>",id:"fromfoldablemap",level:3},{value:"Signature",id:"signature-50",level:4},{value:"Details",id:"details-50",level:4},{value:"Example",id:"example-29",level:4},{value:"License",id:"license-50",level:4},{value:"<code>has</code>",id:"has",level:3},{value:"Signature",id:"signature-51",level:4},{value:"Details",id:"details-51",level:4},{value:"Example",id:"example-30",level:4},{value:"License",id:"license-51",level:4},{value:"<del><code>hasOwnProperty</code></del>",id:"hasownproperty",level:3},{value:"Signature",id:"signature-52",level:4},{value:"Details",id:"details-52",level:4},{value:"License",id:"license-52",level:4},{value:"<del><code>insertAt</code></del>",id:"insertat",level:3},{value:"Signature",id:"signature-53",level:4},{value:"Details",id:"details-53",level:4},{value:"License",id:"license-53",level:4},{value:"<code>intersection</code>",id:"intersection",level:3},{value:"Signature",id:"signature-54",level:4},{value:"Details",id:"details-54",level:4},{value:"Example",id:"example-31",level:4},{value:"License",id:"license-54",level:4},{value:"<code>isEmpty</code>",id:"isempty",level:3},{value:"Signature",id:"signature-55",level:4},{value:"Details",id:"details-55",level:4},{value:"Example",id:"example-32",level:4},{value:"License",id:"license-55",level:4},{value:"<code>isSubrecord</code>",id:"issubrecord",level:3},{value:"Signature",id:"signature-56",level:4},{value:"Details",id:"details-56",level:4},{value:"Example",id:"example-33",level:4},{value:"License",id:"license-56",level:4},{value:"<code>keys</code>",id:"keys",level:3},{value:"Signature",id:"signature-57",level:4},{value:"Details",id:"details-57",level:4},{value:"Example",id:"example-34",level:4},{value:"License",id:"license-57",level:4},{value:"<code>lookup</code>",id:"lookup",level:3},{value:"Signature",id:"signature-58",level:4},{value:"Details",id:"details-58",level:4},{value:"License",id:"license-58",level:4},{value:"<code>mapWithIndex</code>",id:"mapwithindex",level:3},{value:"Signature",id:"signature-59",level:4},{value:"Details",id:"details-59",level:4},{value:"Example",id:"example-35",level:4},{value:"License",id:"license-59",level:4},{value:"<code>modifyAt</code>",id:"modifyat",level:3},{value:"Signature",id:"signature-60",level:4},{value:"Details",id:"details-60",level:4},{value:"Example",id:"example-36",level:4},{value:"License",id:"license-60",level:4},{value:"<code>partitionMapWithIndex</code>",id:"partitionmapwithindex",level:3},{value:"Signature",id:"signature-61",level:4},{value:"Details",id:"details-61",level:4},{value:"Example",id:"example-37",level:4},{value:"License",id:"license-61",level:4},{value:"<code>partitionWithIndex</code>",id:"partitionwithindex",level:3},{value:"Signature",id:"signature-62",level:4},{value:"Details",id:"details-62",level:4},{value:"Example",id:"example-38",level:4},{value:"License",id:"license-62",level:4},{value:"<code>pop</code>",id:"pop",level:3},{value:"Signature",id:"signature-63",level:4},{value:"Details",id:"details-63",level:4},{value:"Example",id:"example-39",level:4},{value:"License",id:"license-63",level:4},{value:"<del><code>record</code></del>",id:"record-1",level:3},{value:"Signature",id:"signature-64",level:4},{value:"Details",id:"details-64",level:4},{value:"License",id:"license-64",level:4},{value:"<code>reduceRightWithIndex</code>",id:"reducerightwithindex",level:3},{value:"Signature",id:"signature-65",level:4},{value:"Details",id:"details-65",level:4},{value:"Example",id:"example-40",level:4},{value:"License",id:"license-65",level:4},{value:"<code>reduceWithIndex</code>",id:"reducewithindex",level:3},{value:"Signature",id:"signature-66",level:4},{value:"Details",id:"details-66",level:4},{value:"Example",id:"example-41",level:4},{value:"License",id:"license-66",level:4},{value:"<code>sequence</code>",id:"sequence",level:3},{value:"Signature",id:"signature-67",level:4},{value:"Details",id:"details-67",level:4},{value:"Example",id:"example-42",level:4},{value:"License",id:"license-67",level:4},{value:"<code>singleton</code>",id:"singleton",level:3},{value:"Signature",id:"signature-68",level:4},{value:"Details",id:"details-68",level:4},{value:"Example",id:"example-43",level:4},{value:"License",id:"license-68",level:4},{value:"<code>size</code>",id:"size",level:3},{value:"Signature",id:"signature-69",level:4},{value:"Details",id:"details-69",level:4},{value:"Example",id:"example-44",level:4},{value:"License",id:"license-69",level:4},{value:"<code>some</code>",id:"some",level:3},{value:"Signature",id:"signature-70",level:4},{value:"Details",id:"details-70",level:4},{value:"Example",id:"example-45",level:4},{value:"License",id:"license-70",level:4},{value:"<code>toUnfoldable</code>",id:"tounfoldable",level:3},{value:"Signature",id:"signature-71",level:4},{value:"Details",id:"details-71",level:4},{value:"Example",id:"example-46",level:4},{value:"License",id:"license-71",level:4},{value:"<code>traverse</code>",id:"traverse",level:3},{value:"Signature",id:"signature-72",level:4},{value:"Details",id:"details-72",level:4},{value:"License",id:"license-72",level:4},{value:"<code>traverseWithIndex</code>",id:"traversewithindex",level:3},{value:"Signature",id:"signature-73",level:4},{value:"Details",id:"details-73",level:4},{value:"License",id:"license-73",level:4},{value:"<code>union</code>",id:"union",level:3},{value:"Signature",id:"signature-74",level:4},{value:"Details",id:"details-74",level:4},{value:"Example",id:"example-47",level:4},{value:"License",id:"license-74",level:4},{value:"<code>updateAt</code>",id:"updateat",level:3},{value:"Signature",id:"signature-75",level:4},{value:"Details",id:"details-75",level:4},{value:"Example",id:"example-48",level:4},{value:"License",id:"license-75",level:4},{value:"<code>upsertAt</code>",id:"upsertat",level:3},{value:"Signature",id:"signature-76",level:4},{value:"Details",id:"details-76",level:4},{value:"Example",id:"example-49",level:4},{value:"License",id:"license-76",level:4}];function o(e){const n={a:"a",code:"code",del:"del",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"record",children:"Record"}),"\n",(0,l.jsx)(n.h3,{id:"instances",children:"Instances"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#compactable",children:"Compactable"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#filterable",children:"Filterable"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#filterablewithindex",children:"FilterableWithIndex"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#functor",children:"Functor"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#functorwithindex",children:"FunctorWithIndex"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#getdifferencemagma",children:"getDifferenceMagma"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#geteq",children:"getEq"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#getintersectionsemigroup",children:"getIntersectionSemigroup"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#getmonoid",children:"getMonoid"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#getshow",children:"getShow"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#getunionmonoid",children:"getUnionMonoid"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#getunionsemigroup",children:"getUnionSemigroup"})}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"conversions",children:"Conversions"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#fromentries",children:"fromEntries"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#toarray",children:"toArray"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#toentries",children:"toEntries"})}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"filtering",children:"Filtering"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#compact",children:"compact"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#filter",children:"filter"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#filtermap",children:"filterMap"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#getwitherable",children:"getWitherable"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#partition",children:"partition"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#partitionmap",children:"partitionMap"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#separate",children:"separate"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#wilt",children:"wilt"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#wither",children:"wither"})}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"folding",children:"Folding"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#foldmap",children:"foldMap"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#getfoldable",children:"getFoldable"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#getfoldablewithindex",children:"getFoldableWithIndex"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#reduce",children:"reduce"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#reduceright",children:"reduceRight"})}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"mapping",children:"Mapping"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#flap",children:"flap"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#map",children:"map"})}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"traversing",children:"Traversing"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#gettraversable",children:"getTraversable"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#gettraversablewithindex",children:"getTraversableWithIndex"})}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"type-lambdas",children:"Type lambdas"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#uri",children:"URI"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#uri",children:"URI"})}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"utilities",children:"Utilities"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.del,{children:(0,l.jsx)(n.a,{href:"#foldable",children:"Foldable"})})," (deprecated)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.del,{children:(0,l.jsx)(n.a,{href:"#foldablewithindex",children:"FoldableWithIndex"})})," (deprecated)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.del,{children:(0,l.jsx)(n.a,{href:"#traversable",children:"Traversable"})})," (deprecated)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.del,{children:(0,l.jsx)(n.a,{href:"#traversablewithindex",children:"TraversableWithIndex"})})," (deprecated)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.del,{children:(0,l.jsx)(n.a,{href:"#witherable",children:"Witherable"})})," (deprecated)"]}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#collect",children:"collect"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#deleteat",children:"deleteAt"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#difference",children:"difference"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#elem",children:"elem"})}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.del,{children:(0,l.jsx)(n.a,{href:"#empty",children:"empty"})})," (deprecated)"]}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#every",children:"every"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#filtermapwithindex",children:"filterMapWithIndex"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#filterwithindex",children:"filterWithIndex"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#foldmapwithindex",children:"foldMapWithIndex"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#fromfoldable",children:"fromFoldable"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#fromfoldablemap",children:"fromFoldableMap"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#has",children:"has"})}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.del,{children:(0,l.jsx)(n.a,{href:"#hasownproperty",children:"hasOwnProperty"})})," (deprecated)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.del,{children:(0,l.jsx)(n.a,{href:"#insertat",children:"insertAt"})})," (deprecated)"]}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#intersection",children:"intersection"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#isempty",children:"isEmpty"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#issubrecord",children:"isSubrecord"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#keys",children:"keys"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#lookup",children:"lookup"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#mapwithindex",children:"mapWithIndex"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#modifyat",children:"modifyAt"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#partitionmapwithindex",children:"partitionMapWithIndex"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#partitionwithindex",children:"partitionWithIndex"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#pop",children:"pop"})}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.del,{children:(0,l.jsx)(n.a,{href:"#record",children:"record"})})," (deprecated)"]}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#reducerightwithindex",children:"reduceRightWithIndex"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#reducewithindex",children:"reduceWithIndex"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#sequence",children:"sequence"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#singleton",children:"singleton"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#size",children:"size"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#some",children:"some"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#tounfoldable",children:"toUnfoldable"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#traverse",children:"traverse"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#traversewithindex",children:"traverseWithIndex"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#union",children:"union"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#updateat",children:"updateAt"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#upsertat",children:"upsertAt"})}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"instances-1",children:"Instances"}),"\n",(0,l.jsx)(n.h3,{id:"compactable",children:(0,l.jsx)(n.code,{children:"Compactable"})}),"\n",(0,l.jsx)(n.h4,{id:"signature",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const Compactable: Compactable1<URI>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"filterable",children:(0,l.jsx)(n.code,{children:"Filterable"})}),"\n",(0,l.jsx)(n.h4,{id:"signature-1",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const Filterable: Filterable1<URI>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-1",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-1",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"filterablewithindex",children:(0,l.jsx)(n.code,{children:"FilterableWithIndex"})}),"\n",(0,l.jsx)(n.h4,{id:"signature-2",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const FilterableWithIndex: FilterableWithIndex1<URI, string>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-2",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-2",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"functor",children:(0,l.jsx)(n.code,{children:"Functor"})}),"\n",(0,l.jsx)(n.h4,{id:"signature-3",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const Functor: Functor1<URI>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-3",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-3",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"functorwithindex",children:(0,l.jsx)(n.code,{children:"FunctorWithIndex"})}),"\n",(0,l.jsx)(n.h4,{id:"signature-4",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const FunctorWithIndex: FunctorWithIndex1<URI, string>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-4",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-4",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"getdifferencemagma",children:(0,l.jsx)(n.code,{children:"getDifferenceMagma"})}),"\n",(0,l.jsxs)(n.p,{children:["Produces a ",(0,l.jsx)(n.code,{children:"Magma"})," with a ",(0,l.jsx)(n.code,{children:"concat"})," function that combines two ",(0,l.jsx)(n.code,{children:"Record"}),"s by making the ",(0,l.jsx)(n.code,{children:"difference"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-5",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const getDifferenceMagma: <A>() => Magma<Record<string, A>>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-5",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { getDifferenceMagma, difference } from '@fp-tx/core/Record'\nimport { Magma } from '@fp-tx/core/Magma'\n\nconst r1 = { a: 3, c: 3 }\nconst r2 = { a: 1, b: 2 }\nconst m: Magma<Record<string, number>> = getDifferenceMagma<number>()\nassert.deepStrictEqual(m.concat(r1, r2), difference(r2)(r1))\nassert.deepStrictEqual(m.concat(r1, r2), { c: 3, b: 2 })\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-5",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"geteq",children:(0,l.jsx)(n.code,{children:"getEq"})}),"\n",(0,l.jsxs)(n.p,{children:["Given an ",(0,l.jsx)(n.code,{children:"Eq"})," for the base type, it produces an ",(0,l.jsx)(n.code,{children:"Eq"})," for a ",(0,l.jsx)(n.code,{children:"Record"})," of that base type."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-6",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const getEq: <K extends string, A>(E: Eq<A>) => Eq<Record<K, A>>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-6",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-1",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { getEq } from '@fp-tx/core/Record'\nimport { string } from 'fp-ts'\nimport { Eq } from '@fp-tx/core/Eq'\n\nconst eq: Eq<Record<string, string>> = getEq(string.Eq)\nassert.deepStrictEqual(eq.equals({ a: 'foo' }, { b: 'bar' }), false)\nassert.deepStrictEqual(eq.equals({ a: 'foo' }, { a: 'foo' }), true)\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-6",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"getintersectionsemigroup",children:(0,l.jsx)(n.code,{children:"getIntersectionSemigroup"})}),"\n",(0,l.jsxs)(n.p,{children:["Given a ",(0,l.jsx)(n.code,{children:"Semigroup"})," in the base type, it produces a ",(0,l.jsx)(n.code,{children:"Semigroup"})," in the ",(0,l.jsx)(n.code,{children:"Record"})," of the base type. The resulting ",(0,l.jsx)(n.code,{children:"Semigroup"})," concatenates two ",(0,l.jsx)(n.code,{children:"Record"}),"s by ",(0,l.jsx)(n.code,{children:"intersection"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-7",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const getIntersectionSemigroup: <A>(S: Se.Semigroup<A>) => Se.Semigroup<Record<string, A>>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-7",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-2",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { getIntersectionSemigroup } from '@fp-tx/core/Record'\nimport { Semigroup } from '@fp-tx/core/Semigroup'\n\nconst sNumber: Semigroup<number> = { concat: (x, y) => x - y }\nconst sRecord: Semigroup<Record<string, number>> = getIntersectionSemigroup(sNumber)\nassert.deepStrictEqual(sRecord.concat({ a: 1, b: 2 }, { b: 3, c: 4 }), { b: -1 })\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-7",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"getmonoid",children:(0,l.jsx)(n.code,{children:"getMonoid"})}),"\n",(0,l.jsxs)(n.p,{children:["Returns a ",(0,l.jsx)(n.code,{children:"Monoid"})," instance for ",(0,l.jsx)(n.code,{children:"Record"}),"s, given a ",(0,l.jsx)(n.code,{children:"Semigroup"})," instance for the base type. The ",(0,l.jsx)(n.code,{children:"Monoid"})," makes the union of two ",(0,l.jsx)(n.code,{children:"Record"}),"s comining the overlapping entries with the provided ",(0,l.jsx)(n.code,{children:"Semigroup"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-8",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const getMonoid: <K extends string, A>(S: Semigroup<A>) => Monoid<Record<K, A>>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-8",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-3",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { SemigroupSum } from '@fp-tx/core/number'\nimport { getMonoid } from '@fp-tx/core/Record'\n\nconst M = getMonoid(SemigroupSum)\nassert.deepStrictEqual(M.concat({ foo: 123, bar: 234 }, { foo: 456, baz: 567 }), {\n  foo: 579,\n  bar: 234,\n  baz: 567,\n})\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-8",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"getshow",children:(0,l.jsx)(n.code,{children:"getShow"})}),"\n",(0,l.jsxs)(n.p,{children:["Produces a ",(0,l.jsx)(n.code,{children:"Show"})," for a ",(0,l.jsx)(n.code,{children:"Record"}),", given a ",(0,l.jsx)(n.code,{children:"Show"})," for the base type (a ",(0,l.jsx)(n.code,{children:"Show"})," produces a human-readable representation of an instance). ",(0,l.jsx)(n.code,{children:"Record"})," entries are sorted by key with the provided ",(0,l.jsx)(n.code,{children:"Ord"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-9",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare function getShow(O: Ord<string>): <A>(S: Show<A>) => Show<Record<string, A>>\n\n\n\nexport declare function getShow<A>(S: Show<A>): Show<Record<string, A>>\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-9",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-4",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { getShow } from '@fp-tx/core/Record'\nimport { Show } from '@fp-tx/core/Show'\nimport { Ord } from '@fp-tx/core/string'\n\nconst sNumber: Show<number> = { show: (n: number) => `${n}` }\nconst sRecord: Show<Record<string, number>> = getShow(Ord)(sNumber)\nassert.deepStrictEqual(sRecord.show({ b: 2, a: 1 }), '{ \"a\": 1, \"b\": 2 }')\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-9",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"getunionmonoid",children:(0,l.jsx)(n.code,{children:"getUnionMonoid"})}),"\n",(0,l.jsxs)(n.p,{children:["Same as ",(0,l.jsx)(n.code,{children:"getMonoid"}),". Returns a ",(0,l.jsx)(n.code,{children:"Monoid"})," instance for ",(0,l.jsx)(n.code,{children:"Record"}),"s given a ",(0,l.jsx)(n.code,{children:"Semigroup"})," instance for the base type. The ",(0,l.jsx)(n.code,{children:"Monoid"})," makes the union of two ",(0,l.jsx)(n.code,{children:"Record"}),"s combining the entries that have the same key with the provided ",(0,l.jsx)(n.code,{children:"Semigroup"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-10",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const getUnionMonoid: <A>(S: Se.Semigroup<A>) => Monoid<Record<string, A>>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-10",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-5",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { SemigroupSum } from '@fp-tx/core/number'\nimport { getUnionMonoid } from '@fp-tx/core/Record'\n\nconst M = getUnionMonoid(SemigroupSum)\nassert.deepStrictEqual(M.concat({ foo: 123, bar: 234 }, { foo: 456, baz: 567 }), {\n  foo: 579,\n  bar: 234,\n  baz: 567,\n})\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-10",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"getunionsemigroup",children:(0,l.jsx)(n.code,{children:"getUnionSemigroup"})}),"\n",(0,l.jsxs)(n.p,{children:["Given a ",(0,l.jsx)(n.code,{children:"Semigroup"})," in the base type, it produces a ",(0,l.jsx)(n.code,{children:"Semigroup"})," in the ",(0,l.jsx)(n.code,{children:"Record"})," of the base type. The resulting ",(0,l.jsx)(n.code,{children:"Semigroup"})," concatenates two ",(0,l.jsx)(n.code,{children:"Record"}),"s by ",(0,l.jsx)(n.code,{children:"union"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-11",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const getUnionSemigroup: <A>(S: Se.Semigroup<A>) => Se.Semigroup<Record<string, A>>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-11",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-6",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { getUnionSemigroup } from '@fp-tx/core/Record'\nimport { Semigroup } from '@fp-tx/core/Semigroup'\n\nconst sNumber: Semigroup<number> = { concat: (x, y) => x - y }\nconst sRecord: Semigroup<Record<string, number>> = getUnionSemigroup(sNumber)\nassert.deepStrictEqual(sRecord.concat({ a: 1, b: 2 }, { b: 3, c: 4 }), { a: 1, b: -1, c: 4 })\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-11",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"conversions-1",children:"Conversions"}),"\n",(0,l.jsx)(n.h3,{id:"fromentries",children:(0,l.jsx)(n.code,{children:"fromEntries"})}),"\n",(0,l.jsxs)(n.p,{children:["Converts an ",(0,l.jsx)(n.code,{children:"Array"})," of ",(0,l.jsx)(n.code,{children:"[key, value]"})," tuples into a ",(0,l.jsx)(n.code,{children:"Record"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-12",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const fromEntries: <A>(fa: [string, A][]) => Record<string, A>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-12",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-7",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { fromEntries } from '@fp-tx/core/Record'\n\nassert.deepStrictEqual(\n  fromEntries([\n    ['a', 1],\n    ['b', 2],\n    ['a', 3],\n  ]),\n  { b: 2, a: 3 },\n)\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-12",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"toarray",children:(0,l.jsx)(n.code,{children:"toArray"})}),"\n",(0,l.jsxs)(n.p,{children:["Get a sorted ",(0,l.jsx)(n.code,{children:"Array"})," of the key/value pairs contained in a ",(0,l.jsx)(n.code,{children:"Record"}),". Sorted alphabetically by key."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-13",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const toArray: <K extends string, A>(r: Record<K, A>) => Array<[K, A]>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-13",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-8",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { toArray } from '@fp-tx/core/Record'\n\nconst x = { c: 3, a: 'foo', b: false }\nassert.deepStrictEqual(toArray(x), [\n  ['a', 'foo'],\n  ['b', false],\n  ['c', 3],\n])\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-13",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"toentries",children:(0,l.jsx)(n.code,{children:"toEntries"})}),"\n",(0,l.jsxs)(n.p,{children:["Alias of ",(0,l.jsx)(n.a,{href:"#toArray",children:(0,l.jsx)(n.code,{children:"toArray"})}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-14",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const toEntries: <K extends string, A>(r: Record<K, A>) => [K, A][]\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-14",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-9",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { toEntries } from '@fp-tx/core/Record'\n\nassert.deepStrictEqual(toEntries({ b: 2, a: 1 }), [\n  ['a', 1],\n  ['b', 2],\n])\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-14",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"filtering-1",children:"Filtering"}),"\n",(0,l.jsx)(n.h3,{id:"compact",children:(0,l.jsx)(n.code,{children:"compact"})}),"\n",(0,l.jsxs)(n.p,{children:["Compact a ",(0,l.jsx)(n.code,{children:"Record"})," of ",(0,l.jsx)(n.code,{children:"Option"}),"s discarding the ",(0,l.jsx)(n.code,{children:"None"})," values and keeping the ",(0,l.jsx)(n.code,{children:"Some"})," values."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-15",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const compact: <A>(fa: Record<string, Option<A>>) => Record<string, A>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-15",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-10",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { compact } from '@fp-tx/core/Record'\nimport { option } from 'fp-ts'\n\nassert.deepStrictEqual(compact({ a: option.some('foo'), b: option.none, c: option.some('bar') }), {\n  a: 'foo',\n  c: 'bar',\n})\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-15",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"filter",children:(0,l.jsx)(n.code,{children:"filter"})}),"\n",(0,l.jsxs)(n.p,{children:["Given a ",(0,l.jsx)(n.code,{children:"Predicate"}),", it produces a new ",(0,l.jsx)(n.code,{children:"Record"})," keeping only the entries with a value that satisfies the provided predicate."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-16",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const filter: {\n  <A, B extends A>(refinement: Refinement<A, B>): (fa: Record<string, A>) => Record<string, B>\n  <A>(predicate: Predicate<A>): <B extends A>(fb: Record<string, B>) => Record<string, B>\n  <A>(predicate: Predicate<A>): (fa: Record<string, A>) => Record<string, A>\n}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-16",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-11",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { filter } from '@fp-tx/core/Record'\n\nassert.deepStrictEqual(filter((s: string) => s.length < 4)({ a: 'foo', b: 'bar', c: 'verylong' }), {\n  a: 'foo',\n  b: 'bar',\n})\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-16",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"filtermap",children:(0,l.jsx)(n.code,{children:"filterMap"})}),"\n",(0,l.jsxs)(n.p,{children:["Maps a ",(0,l.jsx)(n.code,{children:"Record"})," with an iterating function that returns an ",(0,l.jsx)(n.code,{children:"Option"})," and it keeps only the ",(0,l.jsx)(n.code,{children:"Some"})," values discarding the ",(0,l.jsx)(n.code,{children:"None"}),"s."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-17",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const filterMap: <A, B>(f: (a: A) => Option<B>) => (fa: Record<string, A>) => Record<string, B>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-17",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-12",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { filterMap } from '@fp-tx/core/Record'\nimport { option } from 'fp-ts'\n\nconst f = (s: string) => (s.length < 4 ? option.some(`${s} is short`) : option.none)\nassert.deepStrictEqual(filterMap(f)({ a: 'foo', b: 'bar', c: 'verylong' }), {\n  a: 'foo is short',\n  b: 'bar is short',\n})\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-17",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"getwitherable",children:(0,l.jsx)(n.code,{children:"getWitherable"})}),"\n",(0,l.jsx)(n.h4,{id:"signature-18",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const getWitherable: (O: Ord<string>) => Witherable1<URI>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-18",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-18",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"partition",children:(0,l.jsx)(n.code,{children:"partition"})}),"\n",(0,l.jsxs)(n.p,{children:["Partition a ",(0,l.jsx)(n.code,{children:"Record"})," into two parts according to a ",(0,l.jsx)(n.code,{children:"Predicate"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-19",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const partition: {\n  <A, B extends A>(\n    refinement: Refinement<A, B>,\n  ): (fa: Record<string, A>) => Separated<Record<string, A>, Record<string, B>>\n  <A>(predicate: Predicate<A>): <B extends A>(fb: Record<string, B>) => Separated<Record<string, B>, Record<string, B>>\n  <A>(predicate: Predicate<A>): (fa: Record<string, A>) => Separated<Record<string, A>, Record<string, A>>\n}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-19",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-13",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { partition } from '@fp-tx/core/Record'\n\nassert.deepStrictEqual(partition((s: string) => s.length < 4)({ a: 'foo', b: 'bar', c: 'verylong' }), {\n  left: {\n    c: 'verylong',\n  },\n  right: {\n    a: 'foo',\n    b: 'bar',\n  },\n})\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-19",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"partitionmap",children:(0,l.jsx)(n.code,{children:"partitionMap"})}),"\n",(0,l.jsxs)(n.p,{children:["Maps a ",(0,l.jsx)(n.code,{children:"Record"})," with a function returning an ",(0,l.jsx)(n.code,{children:"Either"})," and partitions the resulting ",(0,l.jsx)(n.code,{children:"Record"})," into ",(0,l.jsx)(n.code,{children:"Left"}),"s and ",(0,l.jsx)(n.code,{children:"Right"}),"s."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-20",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const partitionMap: <A, B, C>(\n  f: (a: A) => Either<B, C>,\n) => (fa: Record<string, A>) => Separated<Record<string, B>, Record<string, C>>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-20",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-14",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { partitionMap } from '@fp-tx/core/Record'\nimport { either } from 'fp-ts'\n\nconst f = (s: string) => (s.length < 4 ? either.right(`${s} is short`) : either.left(`${s} is not short`))\nassert.deepStrictEqual(partitionMap(f)({ a: 'foo', b: 'bar', c: 'verylong' }), {\n  left: {\n    c: 'verylong is not short',\n  },\n  right: {\n    a: 'foo is short',\n    b: 'bar is short',\n  },\n})\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-20",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"separate",children:(0,l.jsx)(n.code,{children:"separate"})}),"\n",(0,l.jsxs)(n.p,{children:["Separate a ",(0,l.jsx)(n.code,{children:"Record"})," of ",(0,l.jsx)(n.code,{children:"Either"}),"s into ",(0,l.jsx)(n.code,{children:"Left"}),"s and ",(0,l.jsx)(n.code,{children:"Right"}),"s."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-21",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const separate: <A, B>(\n  fa: Record<string, Either<A, B>>,\n) => Separated<Record<string, A>, Record<string, B>>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-21",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-15",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { separate } from '@fp-tx/core/Record'\nimport { either } from 'fp-ts'\n\nassert.deepStrictEqual(separate({ a: either.right('foo'), b: either.left('bar'), c: either.right('baz') }), {\n  right: {\n    a: 'foo',\n    c: 'baz',\n  },\n  left: {\n    b: 'bar',\n  },\n})\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-21",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"wilt",children:(0,l.jsx)(n.code,{children:"wilt"})}),"\n",(0,l.jsx)(n.h4,{id:"signature-22",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const wilt: PipeableWilt1<URI>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-22",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-22",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"wither",children:(0,l.jsx)(n.code,{children:"wither"})}),"\n",(0,l.jsx)(n.h4,{id:"signature-23",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const wither: PipeableWither1<URI>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-23",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-23",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"folding-1",children:"Folding"}),"\n",(0,l.jsx)(n.h3,{id:"foldmap",children:(0,l.jsx)(n.code,{children:"foldMap"})}),"\n",(0,l.jsxs)(n.p,{children:["Map and fold a ",(0,l.jsx)(n.code,{children:"Record"}),". Map the ",(0,l.jsx)(n.code,{children:"Record"})," passing each value to the iterating function. Then fold the results using the provided ",(0,l.jsx)(n.code,{children:"Monoid"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-24",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare function foldMap(\n  O: Ord<string>,\n): <M>(M: Monoid<M>) => <A>(f: (a: A) => M) => (fa: Record<string, A>) => M\n\n\n\nexport declare function foldMap<M>(M: Monoid<M>): <A>(f: (a: A) => M) => (fa: Record<string, A>) => M\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-24",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-16",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { foldMap } from '@fp-tx/core/Record'\nimport { Ord } from '@fp-tx/core/string'\nimport { Monoid } from '@fp-tx/core/Monoid'\n\nconst m: Monoid<string> = { empty: '', concat: (x: string, y: string) => (x ? `${x} -> ${y}` : `${y}`) }\nconst f = (a: number) => `-${a}-`\nconst x = { c: 3, a: 1, b: 2 }\nassert.deepStrictEqual(foldMap(Ord)(m)(f)(x), '-1- -> -2- -> -3-')\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-24",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"getfoldable",children:(0,l.jsx)(n.code,{children:"getFoldable"})}),"\n",(0,l.jsxs)(n.p,{children:["Produces a ",(0,l.jsx)(n.code,{children:"Foldable"})," instance for a ",(0,l.jsx)(n.code,{children:"Record"}),", using the provided ",(0,l.jsx)(n.code,{children:"Ord"})," to sort the ",(0,l.jsx)(n.code,{children:"Record"}),"'s entries by key."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-25",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const getFoldable: (O: Ord<string>) => Foldable1<URI>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-25",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-25",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"getfoldablewithindex",children:(0,l.jsx)(n.code,{children:"getFoldableWithIndex"})}),"\n",(0,l.jsxs)(n.p,{children:["Produces a ",(0,l.jsx)(n.code,{children:"FoldableWithIndex1"})," instance for a ",(0,l.jsx)(n.code,{children:"Record"}),", using the provided ",(0,l.jsx)(n.code,{children:"Ord"})," to sort the ",(0,l.jsx)(n.code,{children:"Record"}),"'s entries by key."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-26",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const getFoldableWithIndex: (O: Ord<string>) => FoldableWithIndex1<URI, string>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-26",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-26",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"reduce",children:(0,l.jsx)(n.code,{children:"reduce"})}),"\n",(0,l.jsxs)(n.p,{children:["Reduces a ",(0,l.jsx)(n.code,{children:"Record"})," passing each value to the iterating function. Entries are processed in order, sorted by key according to the given ",(0,l.jsx)(n.code,{children:"Ord"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-27",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare function reduce(O: Ord<string>): <A, B>(b: B, f: (b: B, a: A) => B) => (fa: Record<string, A>) => B\n\n\n\nexport declare function reduce<A, B>(b: B, f: (b: B, a: A) => B): (fa: Record<string, A>) => B\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-27",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-17",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { reduce } from '@fp-tx/core/Record'\nimport { Ord } from '@fp-tx/core/string'\n\nconst x = { c: 3, a: 'foo', b: false }\nassert.deepStrictEqual(reduce(Ord)([] as string[], (b, a) => [...b, `-${a}-`])(x), ['-foo-', '-false-', '-3-'])\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-27",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"reduceright",children:(0,l.jsx)(n.code,{children:"reduceRight"})}),"\n",(0,l.jsxs)(n.p,{children:["Same as ",(0,l.jsx)(n.code,{children:"reduce"})," but entries are processed ",(0,l.jsx)(n.em,{children:"from the right"}),", i.e. in reverse order, from the last to the first entry, according to the given ",(0,l.jsx)(n.code,{children:"Ord"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-28",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare function reduceRight(O: Ord<string>): <A, B>(b: B, f: (a: A, b: B) => B) => (fa: Record<string, A>) => B\n\n\n\nexport declare function reduceRight<A, B>(b: B, f: (a: A, b: B) => B): (fa: Record<string, A>) => B\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-28",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-18",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { reduceRight } from '@fp-tx/core/Record'\nimport { Ord } from '@fp-tx/core/string'\n\nconst x = { c: 3, a: 'foo', b: false }\nassert.deepStrictEqual(reduceRight(Ord)([] as string[], (a, b) => [...b, `-${a}-`])(x), [\n  '-3-',\n  '-false-',\n  '-foo-',\n])\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-28",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"mapping-1",children:"Mapping"}),"\n",(0,l.jsx)(n.h3,{id:"flap",children:(0,l.jsx)(n.code,{children:"flap"})}),"\n",(0,l.jsxs)(n.p,{children:["Takes a value and a ",(0,l.jsx)(n.code,{children:"Record"})," of functions and returns a ",(0,l.jsx)(n.code,{children:"Record"})," by applying each function to the input value."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-29",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const flap: <A>(a: A) => <B>(fab: Record<string, (a: A) => B>) => Record<string, B>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-29",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-19",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { flap } from '@fp-tx/core/Record'\n\nconst fab = { x: (n: number) => `${n} times 2`, y: (n: number) => `${n * 2}` }\nassert.deepStrictEqual(flap(3)(fab), {\n  x: '3 times 2',\n  y: '6',\n})\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-29",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"map",children:(0,l.jsx)(n.code,{children:"map"})}),"\n",(0,l.jsxs)(n.p,{children:["Map a ",(0,l.jsx)(n.code,{children:"Record"})," passing the values to the iterating function."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-30",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const map: <A, B>(f: (a: A) => B) => <K extends string>(fa: Record<K, A>) => Record<K, B>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-30",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-20",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { map } from '@fp-tx/core/Record'\n\nconst f = (n: number) => `-${n}-`\nassert.deepStrictEqual(map(f)({ a: 3, b: 5 }), { a: '-3-', b: '-5-' })\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-30",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"traversing-1",children:"Traversing"}),"\n",(0,l.jsx)(n.h3,{id:"gettraversable",children:(0,l.jsx)(n.code,{children:"getTraversable"})}),"\n",(0,l.jsxs)(n.p,{children:["Produces a ",(0,l.jsx)(n.code,{children:"Traversable"})," instance for a ",(0,l.jsx)(n.code,{children:"Record"}),", using the provided ",(0,l.jsx)(n.code,{children:"Ord"})," to sort the ",(0,l.jsx)(n.code,{children:"Record"}),"'s entries by key."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-31",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const getTraversable: (O: Ord<string>) => Traversable1<URI>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-31",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-31",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"gettraversablewithindex",children:(0,l.jsx)(n.code,{children:"getTraversableWithIndex"})}),"\n",(0,l.jsxs)(n.p,{children:["Produces a ",(0,l.jsx)(n.code,{children:"TraversableWithIndex"})," instance for a ",(0,l.jsx)(n.code,{children:"Record"}),", using the provided ",(0,l.jsx)(n.code,{children:"Ord"})," to sort the ",(0,l.jsx)(n.code,{children:"Record"}),"'s entries by key."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-32",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const getTraversableWithIndex: (O: Ord<string>) => TraversableWithIndex1<URI, string>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-32",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-32",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"type-lambdas-1",children:"Type lambdas"}),"\n",(0,l.jsx)(n.h3,{id:"uri",children:(0,l.jsx)(n.code,{children:"URI"})}),"\n",(0,l.jsx)(n.h4,{id:"signature-33",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export type URI = typeof URI\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-33",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-33",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"uri-1",children:(0,l.jsx)(n.code,{children:"URI"})}),"\n",(0,l.jsx)(n.h4,{id:"signature-34",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const URI = 'Record'\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-34",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-34",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"utilities-1",children:"Utilities"}),"\n",(0,l.jsx)(n.h3,{id:"foldable",children:(0,l.jsx)(n.del,{children:(0,l.jsx)(n.code,{children:"Foldable"})})}),"\n",(0,l.jsxs)(n.p,{children:["Use ",(0,l.jsx)(n.code,{children:"getFoldable"})," instead."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-35",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const Foldable: Foldable1<URI>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-35",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"Deprecated"})}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-35",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"foldablewithindex",children:(0,l.jsx)(n.del,{children:(0,l.jsx)(n.code,{children:"FoldableWithIndex"})})}),"\n",(0,l.jsxs)(n.p,{children:["Use ",(0,l.jsx)(n.code,{children:"getFoldableWithIndex"})," instead."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-36",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const FoldableWithIndex: FoldableWithIndex1<URI, string>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-36",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"Deprecated"})}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-36",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"traversable",children:(0,l.jsx)(n.del,{children:(0,l.jsx)(n.code,{children:"Traversable"})})}),"\n",(0,l.jsxs)(n.p,{children:["Use ",(0,l.jsx)(n.code,{children:"getTraversable"})," instead."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-37",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const Traversable: Traversable1<URI>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-37",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"Deprecated"})}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-37",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"traversablewithindex",children:(0,l.jsx)(n.del,{children:(0,l.jsx)(n.code,{children:"TraversableWithIndex"})})}),"\n",(0,l.jsxs)(n.p,{children:["Use the ",(0,l.jsx)(n.code,{children:"getTraversableWithIndex"})," instead."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-38",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const TraversableWithIndex: TraversableWithIndex1<URI, string>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-38",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"Deprecated"})}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-38",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"witherable",children:(0,l.jsx)(n.del,{children:(0,l.jsx)(n.code,{children:"Witherable"})})}),"\n",(0,l.jsxs)(n.p,{children:["Use ",(0,l.jsx)(n.code,{children:"getWitherable"})," instead."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-39",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const Witherable: Witherable1<URI>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-39",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"Deprecated"})}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-39",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"collect",children:(0,l.jsx)(n.code,{children:"collect"})}),"\n",(0,l.jsxs)(n.p,{children:["Map a ",(0,l.jsx)(n.code,{children:"Record"})," into an ",(0,l.jsx)(n.code,{children:"Array"}),". It passes each key/value pair to the iterating function and collects the results in an array, sorted alphabetically by the original key."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-40",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare function collect(\n  O: Ord<string>,\n): <K extends string, A, B>(f: (k: K, a: A) => B) => (r: Record<K, A>) => Array<B>\n\n\n\nexport declare function collect<K extends string, A, B>(f: (k: K, a: A) => B): (r: Record<K, A>) => Array<B>\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-40",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-21",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { collect } from '@fp-tx/core/Record'\nimport { Ord } from '@fp-tx/core/string'\n\nconst f = <A>(k: string, a: A) => `${k.toUpperCase()}-${a}`\nconst x = { c: 3, a: 'foo', b: false }\nassert.deepStrictEqual(collect(Ord)(f)(x), ['A-foo', 'B-false', 'C-3'])\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-40",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"deleteat",children:(0,l.jsx)(n.code,{children:"deleteAt"})}),"\n",(0,l.jsxs)(n.p,{children:["Delete a key and value from a ",(0,l.jsx)(n.code,{children:"Record"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-41",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare function deleteAt<K extends string>(\n  k: K,\n): <KS extends string, A>(r: Record<KS, A>) => Record<string extends K ? string : Exclude<KS, K>, A>\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-41",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-22",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { deleteAt } from '@fp-tx/core/Record'\n\nassert.deepStrictEqual(deleteAt('a')({ a: 1, b: 2 }), { b: 2 })\nassert.deepStrictEqual(deleteAt('c')({ a: 1, b: 2 }), { a: 1, b: 2 })\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-41",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"difference",children:(0,l.jsx)(n.code,{children:"difference"})}),"\n",(0,l.jsxs)(n.p,{children:["Difference between two ",(0,l.jsx)(n.code,{children:"Record"}),"s. Takes two ",(0,l.jsx)(n.code,{children:"Record"}),"s and produces a ",(0,l.jsx)(n.code,{children:"Record"})," composed by the entries of the two inputs, removing the entries with the same key in both inputs."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-42",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const difference: <A>(second: Record<string, A>) => (first: Record<string, A>) => Record<string, A>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-42",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-23",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { difference } from '@fp-tx/core/Record'\n\nassert.deepStrictEqual(difference({ a: 1 })({ a: 1, b: 2 }), { b: 2 })\nassert.deepStrictEqual(difference({ a: 3 })({ a: 1, b: 2 }), { b: 2 })\nassert.deepStrictEqual(difference({ a: 3, c: 3 })({ a: 1, b: 2 }), { b: 2, c: 3 })\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-42",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"elem",children:(0,l.jsx)(n.code,{children:"elem"})}),"\n",(0,l.jsxs)(n.p,{children:["Given an ",(0,l.jsx)(n.code,{children:"Eq"})," checks if a ",(0,l.jsx)(n.code,{children:"Record"})," contains an entry with value equal to a provided value."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-43",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const elem: <A>(E: Eq<A>) => {\n  (a: A): (fa: Record<string, A>) => boolean\n  (a: A, fa: Record<string, A>): boolean\n}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-43",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-24",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { elem } from '@fp-tx/core/Record'\nimport { number } from 'fp-ts'\n\nassert.deepStrictEqual(elem(number.Eq)(123, { foo: 123, bar: 234 }), true)\nassert.deepStrictEqual(elem(number.Eq)(-7, { foo: 123, bar: 234 }), false)\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-43",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"empty",children:(0,l.jsx)(n.del,{children:(0,l.jsx)(n.code,{children:"empty"})})}),"\n",(0,l.jsxs)(n.p,{children:["Use a new ",(0,l.jsx)(n.code,{children:"{}"})," instead."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-44",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const empty: Record<string, never>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-44",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"Deprecated"})}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-44",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"every",children:(0,l.jsx)(n.code,{children:"every"})}),"\n",(0,l.jsxs)(n.p,{children:["Test if every value in a ",(0,l.jsx)(n.code,{children:"Record"})," satisfies the predicate."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-45",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const every: {\n  <A, B extends A>(refinement: Refinement<A, B>): Refinement<Record<string, A>, Record<string, B>>\n  <A>(predicate: Predicate<A>): Predicate<Record<string, A>>\n}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-45",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-25",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { every } from '@fp-tx/core/Record'\n\nassert.deepStrictEqual(every((n: number) => n >= 0)({ a: 1, b: 2 }), true)\nassert.deepStrictEqual(every((n: number) => n >= 0)({ a: 1, b: -1 }), false)\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-45",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"filtermapwithindex",children:(0,l.jsx)(n.code,{children:"filterMapWithIndex"})}),"\n",(0,l.jsxs)(n.p,{children:["Maps a ",(0,l.jsx)(n.code,{children:"Record"})," with an iterating function that takes key and value and returns an ",(0,l.jsx)(n.code,{children:"Option"}),", keeping only the ",(0,l.jsx)(n.code,{children:"Some"})," values and discarding ",(0,l.jsx)(n.code,{children:"None"}),"s."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-46",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const filterMapWithIndex: <K extends string, A, B>(\n  f: (key: K, a: A) => Option<B>,\n) => (fa: Record<K, A>) => Record<string, B>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-46",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-26",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { filterMapWithIndex } from '@fp-tx/core/Record'\nimport { option } from 'fp-ts'\n\nconst f = (key: string, a: number) => (a >= 0 ? option.some(`${key}${a}`) : option.none)\nassert.deepStrictEqual(filterMapWithIndex(f)({ a: -1, b: 2, c: 3 }), {\n  b: 'b2',\n  c: 'c3',\n})\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-46",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"filterwithindex",children:(0,l.jsx)(n.code,{children:"filterWithIndex"})}),"\n",(0,l.jsxs)(n.p,{children:["Produce a new ",(0,l.jsx)(n.code,{children:"Record"})," keeping only the entries that satisfy a predicate taking key and value as input."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-47",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare function filterWithIndex<K extends string, A, B extends A>(\n  refinementWithIndex: RefinementWithIndex<K, A, B>,\n): (fa: Record<K, A>) => Record<string, B>\n\n\n\nexport declare function filterWithIndex<K extends string, A>(\n  predicateWithIndex: PredicateWithIndex<K, A>,\n): <B extends A>(fb: Record<K, B>) => Record<string, B>\n\n\n\nexport declare function filterWithIndex<K extends string, A>(\n  predicateWithIndex: PredicateWithIndex<K, A>,\n): (fa: Record<K, A>) => Record<string, A>\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-47",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-27",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { filterWithIndex } from '@fp-tx/core/Record'\n\nassert.deepStrictEqual(\n  filterWithIndex((s: string, v: number) => s.length <= 1 && v > 0)({ a: 1, b: -2, ccc: 3 }),\n  {\n    a: 1,\n  },\n)\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-47",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"foldmapwithindex",children:(0,l.jsx)(n.code,{children:"foldMapWithIndex"})}),"\n",(0,l.jsxs)(n.p,{children:["Map and fold a ",(0,l.jsx)(n.code,{children:"Record"}),". Map the ",(0,l.jsx)(n.code,{children:"Record"})," passing each key/value pair to the iterating function. Then fold the results using the provided ",(0,l.jsx)(n.code,{children:"Monoid"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-48",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare function foldMapWithIndex(\n  O: Ord<string>,\n): <M>(M: Monoid<M>) => <K extends string, A>(f: (k: K, a: A) => M) => (fa: Record<K, A>) => M\n\n\n\nexport declare function foldMapWithIndex<M>(\n  M: Monoid<M>,\n): <K extends string, A>(f: (k: K, a: A) => M) => (fa: Record<K, A>) => M\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-48",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-28",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { foldMapWithIndex } from '@fp-tx/core/Record'\nimport { Ord } from '@fp-tx/core/string'\nimport { Monoid } from '@fp-tx/core/Monoid'\n\nconst m: Monoid<string> = { empty: '', concat: (x: string, y: string) => (x ? `${x} -> ${y}` : `${y}`) }\nconst f = (k: string, a: number) => `${k}-${a}`\nconst x = { c: 3, a: 1, b: 2 }\nassert.deepStrictEqual(foldMapWithIndex(Ord)(m)(f)(x), 'a-1 -> b-2 -> c-3')\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-48",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"fromfoldable",children:(0,l.jsx)(n.code,{children:"fromFoldable"})}),"\n",(0,l.jsxs)(n.p,{children:["Create a ",(0,l.jsx)(n.code,{children:"Record"})," from a foldable collection of key/value pairs, using the specified ",(0,l.jsx)(n.code,{children:"Magma"})," to combine values for duplicate keys."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-49",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare function fromFoldable<F extends URIS3, A>(\n  M: Magma<A>,\n  F: Foldable3<F>,\n): <R, E>(fka: Kind3<F, R, E, [string, A]>) => Record<string, A>\n\n\n\nexport declare function fromFoldable<F extends URIS2, A>(\n  M: Magma<A>,\n  F: Foldable2<F>,\n): <E>(fka: Kind2<F, E, [string, A]>) => Record<string, A>\n\n\n\nexport declare function fromFoldable<F extends URIS, A>(\n  M: Magma<A>,\n  F: Foldable1<F>,\n): (fka: Kind<F, [string, A]>) => Record<string, A>\n\n\n\nexport declare function fromFoldable<F, A>(\n  M: Magma<A>,\n  F: FoldableHKT<F>,\n): (fka: HKT<F, [string, A]>) => Record<string, A>\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-49",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-49",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"fromfoldablemap",children:(0,l.jsx)(n.code,{children:"fromFoldableMap"})}),"\n",(0,l.jsxs)(n.p,{children:["Create a ",(0,l.jsx)(n.code,{children:"Record"})," from a foldable collection using the specified functions to"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Map to key/value pairs - Combine values for duplicate keys."}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"signature-50",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare function fromFoldableMap<F extends URIS3, B>(\n  M: Magma<B>,\n  F: Foldable3<F>,\n): <R, E, A>(fa: Kind3<F, R, E, A>, f: (a: A) => [string, B]) => Record<string, B>\n\n\n\nexport declare function fromFoldableMap<F extends URIS2, B>(\n  M: Magma<B>,\n  F: Foldable2<F>,\n): <E, A>(fa: Kind2<F, E, A>, f: (a: A) => [string, B]) => Record<string, B>\n\n\n\nexport declare function fromFoldableMap<F extends URIS, B>(\n  M: Magma<B>,\n  F: Foldable1<F>,\n): <A>(fa: Kind<F, A>, f: (a: A) => [string, B]) => Record<string, B>\n\n\n\nexport declare function fromFoldableMap<F, B>(\n  M: Magma<B>,\n  F: FoldableHKT<F>,\n): <A>(fa: HKT<F, A>, f: (a: A) => [string, B]) => Record<string, B>\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-50",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-29",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { last } from '@fp-tx/core/Semigroup'\nimport { Foldable, zip } from '@fp-tx/core/Array'\nimport { identity } from '@fp-tx/core/function'\nimport { fromFoldableMap } from '@fp-tx/core/Record'\n\nexport const zipObject = <K extends string, A>(keys: Array<K>, values: Array<A>): Record<K, A> =>\n  fromFoldableMap(last<A>(), Foldable)(zip(keys, values), identity)\n\nassert.deepStrictEqual(zipObject(['a', 'b'], [1, 2, 3]), { a: 1, b: 2 })\n\ninterface User {\n  readonly id: string\n  readonly name: string\n}\n\nconst users: Array<User> = [\n  { id: 'id1', name: 'name1' },\n  { id: 'id2', name: 'name2' },\n  { id: 'id1', name: 'name3' },\n]\n\nassert.deepStrictEqual(\n  fromFoldableMap(last<User>(), Foldable)(users, user => [user.id, user]),\n  {\n    id1: { id: 'id1', name: 'name3' },\n    id2: { id: 'id2', name: 'name2' },\n  },\n)\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-50",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"has",children:(0,l.jsx)(n.code,{children:"has"})}),"\n",(0,l.jsxs)(n.p,{children:["Test whether or not a key exists in a ",(0,l.jsx)(n.code,{children:"Record"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["Note. This function is not pipeable because is a ",(0,l.jsx)(n.code,{children:"Refinement"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-51",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const has: <K extends string>(k: string, r: Record<K, unknown>) => k is K\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-51",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-30",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { has } from '@fp-tx/core/Record'\n\nassert.deepStrictEqual(has('a', { a: 1, b: 2 }), true)\nassert.deepStrictEqual(has('c', { a: 1, b: 2 }), false)\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-51",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"hasownproperty",children:(0,l.jsx)(n.del,{children:(0,l.jsx)(n.code,{children:"hasOwnProperty"})})}),"\n",(0,l.jsxs)(n.p,{children:["Use ",(0,l.jsx)(n.a,{href:"#has",children:(0,l.jsx)(n.code,{children:"has"})})," instead."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-52",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const hasOwnProperty: <K extends string>(k: string, r: Record<K, unknown>) => k is K\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-52",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"Deprecated"})}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-52",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"insertat",children:(0,l.jsx)(n.del,{children:(0,l.jsx)(n.code,{children:"insertAt"})})}),"\n",(0,l.jsxs)(n.p,{children:["Use ",(0,l.jsx)(n.a,{href:"#upsertat",children:(0,l.jsx)(n.code,{children:"upsertAt"})})," instead."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-53",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const insertAt: <A>(k: string, a: A) => (r: Record<string, A>) => Record<string, A>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-53",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"Deprecated"})}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-53",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"intersection",children:(0,l.jsx)(n.code,{children:"intersection"})}),"\n",(0,l.jsxs)(n.p,{children:["Intersection of two ",(0,l.jsx)(n.code,{children:"Record"}),"s. Takes two ",(0,l.jsx)(n.code,{children:"Record"}),"s and produces a ",(0,l.jsx)(n.code,{children:"Record"})," combining only the entries of the two inputswith the same key. It uses the ",(0,l.jsx)(n.code,{children:"concat"})," function of the provided ",(0,l.jsx)(n.code,{children:"Magma"})," to combine the elements."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-54",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const intersection: <A>(\n  M: Magma<A>,\n) => (second: Record<string, A>) => (first: Record<string, A>) => Record<string, A>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-54",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-31",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { intersection } from '@fp-tx/core/Record'\nimport { Magma } from '@fp-tx/core/Magma'\n\nconst m1: Magma<number> = { concat: (x: number, y: number) => x + y }\nassert.deepStrictEqual(intersection(m1)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 4 })\nconst m2: Magma<number> = { concat: (x: number) => x }\nassert.deepStrictEqual(intersection(m2)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 1 })\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-54",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"isempty",children:(0,l.jsx)(n.code,{children:"isEmpty"})}),"\n",(0,l.jsxs)(n.p,{children:["Test whether a ",(0,l.jsx)(n.code,{children:"Record"})," is empty."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-55",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const isEmpty: <A>(r: Record<string, A>) => boolean\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-55",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-32",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { isEmpty } from '@fp-tx/core/Record'\n\nassert.deepStrictEqual(isEmpty({}), true)\nassert.deepStrictEqual(isEmpty({ a: 3 }), false)\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-55",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"issubrecord",children:(0,l.jsx)(n.code,{children:"isSubrecord"})}),"\n",(0,l.jsxs)(n.p,{children:["Test whether one ",(0,l.jsx)(n.code,{children:"Record"})," contains all of the keys and values contained in another ",(0,l.jsx)(n.code,{children:"Record"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-56",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const isSubrecord: <A>(E: Eq<A>) => {\n  (that: Record<string, A>): (me: Record<string, A>) => boolean\n  (me: Record<string, A>, that: Record<string, A>): boolean\n}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-56",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-33",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { isSubrecord } from '@fp-tx/core/Record'\nimport { string } from 'fp-ts'\n\nassert.deepStrictEqual(\n  isSubrecord(string.Eq)({ a: 'foo', b: 'bar', c: 'baz' })({ a: 'foo', b: 'bar', c: 'baz' }),\n  true,\n)\nassert.deepStrictEqual(isSubrecord(string.Eq)({ a: 'foo', b: 'bar', c: 'baz' })({ a: 'foo', c: 'baz' }), true)\nassert.deepStrictEqual(\n  isSubrecord(string.Eq)({ a: 'foo', b: 'bar', c: 'baz' })({ a: 'foo', b: 'not-bar', c: 'baz' }),\n  false,\n)\nassert.deepStrictEqual(isSubrecord(string.Eq)({ a: 'foo', b: 'bar' })({ a: 'foo', b: 'bar', c: 'baz' }), false)\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-56",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"keys",children:(0,l.jsx)(n.code,{children:"keys"})}),"\n",(0,l.jsxs)(n.p,{children:["The keys of a ",(0,l.jsx)(n.code,{children:"Record"}),", sorted alphabetically."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-57",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const keys: <K extends string>(r: Record<K, unknown>) => Array<K>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-57",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-34",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { keys } from '@fp-tx/core/Record'\n\nassert.deepStrictEqual(keys({ c: 1, a: 2, b: 3 }), ['a', 'b', 'c'])\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-57",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"lookup",children:(0,l.jsx)(n.code,{children:"lookup"})}),"\n",(0,l.jsxs)(n.p,{children:["Lookup the value for a key in a ",(0,l.jsx)(n.code,{children:"Record"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-58",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const lookup: {\n  (k: string): <A>(r: Record<string, A>) => Option<A>\n  <A>(k: string, r: Record<string, A>): Option<A>\n}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-58",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-58",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"mapwithindex",children:(0,l.jsx)(n.code,{children:"mapWithIndex"})}),"\n",(0,l.jsxs)(n.p,{children:["Map a ",(0,l.jsx)(n.code,{children:"Record"})," passing the key/value pairs to the iterating function."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-59",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const mapWithIndex: <K extends string, A, B>(f: (k: K, a: A) => B) => (fa: Record<K, A>) => Record<K, B>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-59",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-35",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { mapWithIndex } from '@fp-tx/core/Record'\n\nconst f = (k: string, n: number) => `${k.toUpperCase()}-${n}`\nassert.deepStrictEqual(mapWithIndex(f)({ a: 3, b: 5 }), { a: 'A-3', b: 'B-5' })\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-59",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"modifyat",children:(0,l.jsx)(n.code,{children:"modifyAt"})}),"\n",(0,l.jsxs)(n.p,{children:["Applies a mapping function to one spcific key/value pair in a ",(0,l.jsx)(n.code,{children:"Record"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-60",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const modifyAt: <A>(\n  k: string,\n  f: (a: A) => A,\n) => <K extends string>(r: Record<K, A>) => Option<Record<K, A>>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-60",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-36",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"otherwise it returns `None`\n\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-60",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"partitionmapwithindex",children:(0,l.jsx)(n.code,{children:"partitionMapWithIndex"})}),"\n",(0,l.jsxs)(n.p,{children:["Maps a ",(0,l.jsx)(n.code,{children:"Record"})," with a function returning an ",(0,l.jsx)(n.code,{children:"Either"})," and partitions the resulting ",(0,l.jsx)(n.code,{children:"Record"})," into ",(0,l.jsx)(n.code,{children:"Left"}),"s and ",(0,l.jsx)(n.code,{children:"Right"}),"s."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-61",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const partitionMapWithIndex: <K extends string, A, B, C>(\n  f: (key: K, a: A) => Either<B, C>,\n) => (fa: Record<K, A>) => Separated<Record<string, B>, Record<string, C>>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-61",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-37",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { partitionMapWithIndex } from '@fp-tx/core/Record'\nimport { either } from 'fp-ts'\n\nconst f = (key: string, a: number) =>\n  a >= 0 ? either.right(`${key} is >= 0 (${a})`) : either.left(`${key} is < 0 (${a})`)\nassert.deepStrictEqual(partitionMapWithIndex(f)({ a: -1, b: 2, c: 123 }), {\n  left: {\n    a: 'a is < 0 (-1)',\n  },\n  right: {\n    b: 'b is >= 0 (2)',\n    c: 'c is >= 0 (123)',\n  },\n})\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-61",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"partitionwithindex",children:(0,l.jsx)(n.code,{children:"partitionWithIndex"})}),"\n",(0,l.jsxs)(n.p,{children:["Partition a ",(0,l.jsx)(n.code,{children:"Record"})," into two parts according to a predicate that takes a key and a value."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-62",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare function partitionWithIndex<K extends string, A, B extends A>(\n  refinementWithIndex: RefinementWithIndex<K, A, B>,\n): (fa: Record<K, A>) => Separated<Record<string, A>, Record<string, B>>\n\n\n\nexport declare function partitionWithIndex<K extends string, A>(\n  predicateWithIndex: PredicateWithIndex<K, A>,\n): <B extends A>(fb: Record<K, B>) => Separated<Record<string, B>, Record<string, B>>\n\n\n\nexport declare function partitionWithIndex<K extends string, A>(\n  predicateWithIndex: PredicateWithIndex<K, A>,\n): (fa: Record<K, A>) => Separated<Record<string, A>, Record<string, A>>\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-62",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-38",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { partitionWithIndex } from '@fp-tx/core/Record'\n\nassert.deepStrictEqual(\n  partitionWithIndex((key: string, a: number) => key.length <= 1 && a > 0)({ a: -1, b: 2, ccc: 7 }),\n  {\n    left: {\n      a: -1,\n      ccc: 7,\n    },\n    right: {\n      b: 2,\n    },\n  },\n)\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-62",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"pop",children:(0,l.jsx)(n.code,{children:"pop"})}),"\n",(0,l.jsxs)(n.p,{children:["Delete a key and value from a ",(0,l.jsx)(n.code,{children:"Record"}),", returning the value as well as the subsequent ",(0,l.jsx)(n.code,{children:"Record"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-63",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare function pop<K extends string>(\n  k: K,\n): <KS extends string, A>(r: Record<KS, A>) => Option<[A, Record<string extends K ? string : Exclude<KS, K>, A>]>\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-63",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-39",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"otherwise it returns `None`\n\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-63",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"record-1",children:(0,l.jsx)(n.del,{children:(0,l.jsx)(n.code,{children:"record"})})}),"\n",(0,l.jsxs)(n.p,{children:["This instance is deprecated, use small, specific instances instead. For example if a function needs a ",(0,l.jsx)(n.code,{children:"Functor"})," instance, pass ",(0,l.jsx)(n.code,{children:"R.Functor"})," instead of ",(0,l.jsx)(n.code,{children:"R.record"})," (where ",(0,l.jsx)(n.code,{children:"R"})," is from ",(0,l.jsx)(n.code,{children:"import R from 'fp-ts/Record'"}),")"]}),"\n",(0,l.jsx)(n.h4,{id:"signature-64",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const record: FunctorWithIndex1<URI, string> &\n  FoldableWithIndex1<URI, string> &\n  FilterableWithIndex1<URI, string> &\n  TraversableWithIndex1<URI, string> &\n  Witherable1<URI>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-64",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"Deprecated"})}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-64",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"reducerightwithindex",children:(0,l.jsx)(n.code,{children:"reduceRightWithIndex"})}),"\n",(0,l.jsxs)(n.p,{children:["Same as ",(0,l.jsx)(n.code,{children:"reduceWithIndex"}),", but reduce starting from the right (i.e. in reverse order, from the last to the first entry according to the given ",(0,l.jsx)(n.code,{children:"Ord"}),")."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-65",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare function reduceRightWithIndex(\n  O: Ord<string>,\n): <K extends string, A, B>(b: B, f: (k: K, a: A, b: B) => B) => (fa: Record<K, A>) => B\n\n\n\nexport declare function reduceRightWithIndex<K extends string, A, B>(\n  b: B,\n  f: (k: K, a: A, b: B) => B,\n): (fa: Record<K, A>) => B\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-65",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-40",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { reduceRightWithIndex } from '@fp-tx/core/Record'\nimport { Ord } from '@fp-tx/core/string'\n\nconst x = { c: 3, a: 'foo', b: false }\nassert.deepStrictEqual(reduceRightWithIndex(Ord)([] as string[], (k, a, b) => [...b, `${k}-${a}`])(x), [\n  'c-3',\n  'b-false',\n  'a-foo',\n])\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-65",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"reducewithindex",children:(0,l.jsx)(n.code,{children:"reduceWithIndex"})}),"\n",(0,l.jsxs)(n.p,{children:["Reduces a ",(0,l.jsx)(n.code,{children:"Record"})," passing each key/value pair to the iterating function. Entries are processed in the order, sorted by key according to the given ",(0,l.jsx)(n.code,{children:"Ord"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-66",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare function reduceWithIndex(\n  O: Ord<string>,\n): <K extends string, A, B>(b: B, f: (k: K, b: B, a: A) => B) => (fa: Record<K, A>) => B\n\n\n\nexport declare function reduceWithIndex<K extends string, A, B>(\n  b: B,\n  f: (k: K, b: B, a: A) => B,\n): (fa: Record<K, A>) => B\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-66",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-41",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { reduceWithIndex } from '@fp-tx/core/Record'\nimport { Ord } from '@fp-tx/core/string'\n\nconst x = { c: 3, a: 'foo', b: false }\nassert.deepStrictEqual(reduceWithIndex(Ord)([] as string[], (k, b, a) => [...b, `${k}-${a}`])(x), [\n  'a-foo',\n  'b-false',\n  'c-3',\n])\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-66",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"sequence",children:(0,l.jsx)(n.code,{children:"sequence"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"Record"})," sequencing, i.e., take a ",(0,l.jsx)(n.code,{children:"Record"})," in which elements are monads and return a monad of a ",(0,l.jsx)(n.code,{children:"Record"})," of the base types. The following example for instance shows sequencing a ",(0,l.jsx)(n.code,{children:"Record<string, Option<number>>"})," into an ",(0,l.jsx)(n.code,{children:"Option<Record<string, number>>"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"sequence"})," in ",(0,l.jsx)(n.code,{children:"Record"})," is equivalent to ",(0,l.jsx)(n.code,{children:"sequenceS"})," in ",(0,l.jsx)(n.code,{children:"Apply.ts"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-67",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare function sequence<F extends URIS3>(\n  F: Applicative3<F>,\n): <K extends string, R, E, A>(ta: Record<K, Kind3<F, R, E, A>>) => Kind3<F, R, E, Record<K, A>>\n\n\n\nexport declare function sequence<F extends URIS3, E>(\n  F: Applicative3C<F, E>,\n): <K extends string, R, A>(ta: Record<K, Kind3<F, R, E, A>>) => Kind3<F, R, E, Record<K, A>>\n\n\n\nexport declare function sequence<F extends URIS2>(\n  F: Applicative2<F>,\n): <K extends string, E, A>(ta: Record<K, Kind2<F, E, A>>) => Kind2<F, E, Record<K, A>>\n\n\n\nexport declare function sequence<F extends URIS2, E>(\n  F: Applicative2C<F, E>,\n): <K extends string, A>(ta: Record<K, Kind2<F, E, A>>) => Kind2<F, E, Record<K, A>>\n\n\n\nexport declare function sequence<F extends URIS>(\n  F: Applicative1<F>,\n): <K extends string, A>(ta: Record<K, Kind<F, A>>) => Kind<F, Record<K, A>>\n\n\n\nexport declare function sequence<F>(\n  F: Applicative<F>,\n): <K extends string, A>(ta: Record<K, HKT<F, A>>) => HKT<F, Record<K, A>>\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-67",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-42",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { sequence } from '@fp-tx/core/Record'\nimport { option } from 'fp-ts'\nimport { sequenceS } from '@fp-tx/core/Apply'\n\nassert.deepStrictEqual(\n  sequence(option.Applicative)({ a: option.some(1), b: option.some(2) }),\n  option.some({ a: 1, b: 2 }),\n)\nassert.deepStrictEqual(sequence(option.Applicative)({ a: option.some(1), b: option.none }), option.none)\nassert.deepStrictEqual(\n  sequence(option.Applicative)({ a: option.some(1), b: option.some(2) }),\n  sequenceS(option.Applicative)({ a: option.some(1), b: option.some(2) }),\n)\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-67",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"singleton",children:(0,l.jsx)(n.code,{children:"singleton"})}),"\n",(0,l.jsxs)(n.p,{children:["Create a ",(0,l.jsx)(n.code,{children:"Record"})," with one key/value pair."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-68",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const singleton: <A>(k: string, a: A) => Record<string, A>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-68",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-43",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { singleton } from '@fp-tx/core/Record'\n\nassert.deepStrictEqual(singleton('a', 1), { a: 1 })\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-68",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"size",children:(0,l.jsx)(n.code,{children:"size"})}),"\n",(0,l.jsxs)(n.p,{children:["Calculate the number of key/value pairs in a ",(0,l.jsx)(n.code,{children:"Record"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-69",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const size: <A>(r: Record<string, A>) => number\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-69",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-44",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { size } from '@fp-tx/core/Record'\n\nassert.deepStrictEqual(size({ a: true, b: 2, c: 'three' }), 3)\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-69",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"some",children:(0,l.jsx)(n.code,{children:"some"})}),"\n",(0,l.jsxs)(n.p,{children:["Test if at least one value in a ",(0,l.jsx)(n.code,{children:"Record"})," satisfies the predicate."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-70",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const some: <A>(predicate: (a: A) => boolean) => (r: Record<string, A>) => boolean\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-70",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-45",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { some } from '@fp-tx/core/Record'\n\nassert.deepStrictEqual(some((n: number) => n >= 0)({ a: 1, b: -2 }), true)\nassert.deepStrictEqual(some((n: number) => n >= 0)({ a: -1, b: -2 }), false)\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-70",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"tounfoldable",children:(0,l.jsx)(n.code,{children:"toUnfoldable"})}),"\n",(0,l.jsxs)(n.p,{children:["Unfolds a ",(0,l.jsx)(n.code,{children:"Record"})," into a list of key/value pairs."]}),"\n",(0,l.jsxs)(n.p,{children:["Given an ",(0,l.jsx)(n.code,{children:"Unfoldable"})," class type ",(0,l.jsx)(n.code,{children:"U"})," such as ",(0,l.jsx)(n.code,{children:"array"})," or ",(0,l.jsx)(n.code,{children:"readonlyArray"}),", it uses the ",(0,l.jsx)(n.code,{children:"unfold"})," function to create an instance of ",(0,l.jsx)(n.code,{children:"U"}),", providing an iterating function that iterates over each key/value pair in the record sorted alphabetically by key."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-71",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare function toUnfoldable<F extends URIS>(\n  U: Unfoldable1<F>,\n): <K extends string, A>(r: Record<K, A>) => Kind<F, [K, A]>\n\n\n\nexport declare function toUnfoldable<F>(U: Unfoldable<F>): <K extends string, A>(r: Record<K, A>) => HKT<F, [K, A]>\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-71",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-46",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { array, readonlyArray } from 'fp-ts'\nimport { toUnfoldable } from '@fp-tx/core/Record'\n\nassert.deepStrictEqual(toUnfoldable(array)({ b: 2, a: 1 }), [\n  ['a', 1],\n  ['b', 2],\n])\nassert.deepStrictEqual(toUnfoldable(readonlyArray)({ b: 2, a: 1 }), [\n  ['a', 1],\n  ['b', 2],\n])\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-71",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"traverse",children:(0,l.jsx)(n.code,{children:"traverse"})}),"\n",(0,l.jsx)(n.h4,{id:"signature-72",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare function traverse<F extends URIS4>(\n  F: Applicative4<F>,\n): <S, R, E, A, B>(\n  f: (a: A) => Kind4<F, S, R, E, B>,\n) => <K extends string>(ta: Record<K, A>) => Kind4<F, S, R, E, Record<K, B>>\n\n\n\nexport declare function traverse<F extends URIS3>(\n  F: Applicative3<F>,\n): <R, E, A, B>(f: (a: A) => Kind3<F, R, E, B>) => <K extends string>(ta: Record<K, A>) => Kind3<F, R, E, Record<K, B>>\n\n\n\nexport declare function traverse<F extends URIS3, E>(\n  F: Applicative3C<F, E>,\n): <R, A, B>(f: (a: A) => Kind3<F, R, E, B>) => <K extends string>(ta: Record<K, A>) => Kind3<F, R, E, Record<K, B>>\n\n\n\nexport declare function traverse<F extends URIS2>(\n  F: Applicative2<F>,\n): <E, A, B>(f: (a: A) => Kind2<F, E, B>) => <K extends string>(ta: Record<K, A>) => Kind2<F, E, Record<K, B>>\n\n\n\nexport declare function traverse<F extends URIS2, E>(\n  F: Applicative2C<F, E>,\n): <A, B>(f: (a: A) => Kind2<F, E, B>) => <K extends string>(ta: Record<K, A>) => Kind2<F, E, Record<K, B>>\n\n\n\nexport declare function traverse<F extends URIS>(\n  F: Applicative1<F>,\n): <A, B>(f: (a: A) => Kind<F, B>) => <K extends string>(ta: Record<K, A>) => Kind<F, Record<K, B>>\n\n\n\nexport declare function traverse<F>(\n  F: Applicative<F>,\n): <A, B>(f: (a: A) => HKT<F, B>) => <K extends string>(ta: Record<K, A>) => HKT<F, Record<K, B>>\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-72",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-72",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"traversewithindex",children:(0,l.jsx)(n.code,{children:"traverseWithIndex"})}),"\n",(0,l.jsx)(n.h4,{id:"signature-73",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare function traverseWithIndex<F extends URIS4>(\n  F: Applicative4<F>,\n): <K extends string, S, R, E, A, B>(\n  f: (k: K, a: A) => Kind4<F, S, R, E, B>,\n) => (ta: Record<K, A>) => Kind4<F, S, R, E, Record<K, B>>\n\n\n\nexport declare function traverseWithIndex<F extends URIS3>(\n  F: Applicative3<F>,\n): <K extends string, R, E, A, B>(\n  f: (k: K, a: A) => Kind3<F, R, E, B>,\n) => (ta: Record<K, A>) => Kind3<F, R, E, Record<K, B>>\n\n\n\nexport declare function traverseWithIndex<F extends URIS3, E>(\n  F: Applicative3C<F, E>,\n): <K extends string, R, A, B>(\n  f: (k: K, a: A) => Kind3<F, R, E, B>,\n) => (ta: Record<K, A>) => Kind3<F, R, E, Record<K, B>>\n\n\n\nexport declare function traverseWithIndex<F extends URIS2>(\n  F: Applicative2<F>,\n): <K extends string, E, A, B>(f: (k: K, a: A) => Kind2<F, E, B>) => (ta: Record<K, A>) => Kind2<F, E, Record<K, B>>\n\n\n\nexport declare function traverseWithIndex<F extends URIS2, E>(\n  F: Applicative2C<F, E>,\n): <K extends string, A, B>(f: (k: K, a: A) => Kind2<F, E, B>) => (ta: Record<K, A>) => Kind2<F, E, Record<K, B>>\n\n\n\nexport declare function traverseWithIndex<F extends URIS>(\n  F: Applicative1<F>,\n): <K extends string, A, B>(f: (k: K, a: A) => Kind<F, B>) => (ta: Record<K, A>) => Kind<F, Record<K, B>>\n\n\n\nexport declare function traverseWithIndex<F>(\n  F: Applicative<F>,\n): <K extends string, A, B>(f: (k: K, a: A) => HKT<F, B>) => (ta: Record<K, A>) => HKT<F, Record<K, B>>\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-73",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-73",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"union",children:(0,l.jsx)(n.code,{children:"union"})}),"\n",(0,l.jsxs)(n.p,{children:["Union of two ",(0,l.jsx)(n.code,{children:"Record"}),"s. Takes two ",(0,l.jsx)(n.code,{children:"Record"}),"s and produces a ",(0,l.jsx)(n.code,{children:"Record"})," combining all the entries of the two inputs. It uses the ",(0,l.jsx)(n.code,{children:"concat"})," function of the provided ",(0,l.jsx)(n.code,{children:"Magma"})," to combine the elements with the same key."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-74",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const union: <A>(\n  M: Magma<A>,\n) => (second: Record<string, A>) => (first: Record<string, A>) => Record<string, A>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-74",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-47",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { union } from '@fp-tx/core/Record'\nimport { Magma } from '@fp-tx/core/Magma'\n\nconst m1: Magma<number> = { concat: (x: number, y: number) => x + y }\nassert.deepStrictEqual(union(m1)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 4, b: 2, c: 3 })\nconst m2: Magma<number> = { concat: (x: number) => x }\nassert.deepStrictEqual(union(m2)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 1, b: 2, c: 3 })\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-74",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"updateat",children:(0,l.jsx)(n.code,{children:"updateAt"})}),"\n",(0,l.jsxs)(n.p,{children:["Replace a key/value pair in a ",(0,l.jsx)(n.code,{children:"Record"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-75",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const updateAt: <A>(k: string, a: A) => <K extends string>(r: Record<K, A>) => Option<Record<K, A>>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-75",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-48",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"otherwise it returns `None`\n\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-75",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"upsertat",children:(0,l.jsx)(n.code,{children:"upsertAt"})}),"\n",(0,l.jsxs)(n.p,{children:["Insert or replace a key/value pair in a ",(0,l.jsx)(n.code,{children:"Record"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-76",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const upsertAt: <A>(k: string, a: A) => (r: Record<string, A>) => Record<string, A>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-76",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-49",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { upsertAt } from '@fp-tx/core/Record'\n\nassert.deepStrictEqual(upsertAt('a', 5)({ a: 1, b: 2 }), { a: 5, b: 2 })\nassert.deepStrictEqual(upsertAt('c', 5)({ a: 1, b: 2 }), { a: 1, b: 2, c: 5 })\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-76",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}},9779:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>c});var l=i(9474);const r={},d=l.createContext(r);function s(e){const n=l.useContext(d);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),l.createElement(d.Provider,{value:n},e.children)}}}]);