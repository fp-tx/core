"use strict";(self.webpackChunk_fp_tx_core=self.webpackChunk_fp_tx_core||[]).push([[9798],{740:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>t});var l=i(3274),d=i(9779);const s={},r="Monoid",c={id:"modules/Monoid",title:"Monoid",description:"Constructors",source:"@site/docs/modules/Monoid.md",sourceDirName:"modules",slug:"/modules/Monoid",permalink:"/modules/Monoid",draft:!1,unlisted:!1,editUrl:"https://github.com/fp-tx/core/blob/main/docs/modules/Monoid.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"MonadThrow",permalink:"/modules/MonadThrow"},next:{title:"NaturalTransformation",permalink:"/modules/NaturalTransformation"}},o={},t=[{value:"Constructors",id:"constructors",level:3},{value:"Model",id:"model",level:3},{value:"Utilities",id:"utilities",level:3},{value:"Constructors",id:"constructors-1",level:2},{value:"<code>max</code>",id:"max",level:3},{value:"Signature",id:"signature",level:4},{value:"Details",id:"details",level:4},{value:"Example",id:"example",level:4},{value:"License",id:"license",level:4},{value:"<code>min</code>",id:"min",level:3},{value:"Signature",id:"signature-1",level:4},{value:"Details",id:"details-1",level:4},{value:"Example",id:"example-1",level:4},{value:"License",id:"license-1",level:4},{value:"Model",id:"model-1",level:2},{value:"<code>Monoid</code>",id:"monoid-1",level:3},{value:"Signature",id:"signature-2",level:4},{value:"Details",id:"details-2",level:4},{value:"License",id:"license-2",level:4},{value:"Utilities",id:"utilities-1",level:2},{value:"<code>concatAll</code>",id:"concatall",level:3},{value:"Signature",id:"signature-3",level:4},{value:"Details",id:"details-3",level:4},{value:"Example",id:"example-2",level:4},{value:"License",id:"license-3",level:4},{value:"<del><code>fold</code></del>",id:"fold",level:3},{value:"Signature",id:"signature-4",level:4},{value:"Details",id:"details-4",level:4},{value:"License",id:"license-4",level:4},{value:"<del><code>getDualMonoid</code></del>",id:"getdualmonoid",level:3},{value:"Signature",id:"signature-5",level:4},{value:"Details",id:"details-5",level:4},{value:"License",id:"license-5",level:4},{value:"<del><code>getEndomorphismMonoid</code></del>",id:"getendomorphismmonoid",level:3},{value:"Signature",id:"signature-6",level:4},{value:"Details",id:"details-6",level:4},{value:"License",id:"license-6",level:4},{value:"<del><code>getFunctionMonoid</code></del>",id:"getfunctionmonoid",level:3},{value:"Signature",id:"signature-7",level:4},{value:"Details",id:"details-7",level:4},{value:"License",id:"license-7",level:4},{value:"<del><code>getJoinMonoid</code></del>",id:"getjoinmonoid",level:3},{value:"Signature",id:"signature-8",level:4},{value:"Details",id:"details-8",level:4},{value:"License",id:"license-8",level:4},{value:"<del><code>getMeetMonoid</code></del>",id:"getmeetmonoid",level:3},{value:"Signature",id:"signature-9",level:4},{value:"Details",id:"details-9",level:4},{value:"License",id:"license-9",level:4},{value:"<del><code>getStructMonoid</code></del>",id:"getstructmonoid",level:3},{value:"Signature",id:"signature-10",level:4},{value:"Details",id:"details-10",level:4},{value:"License",id:"license-10",level:4},{value:"<del><code>getTupleMonoid</code></del>",id:"gettuplemonoid",level:3},{value:"Signature",id:"signature-11",level:4},{value:"Details",id:"details-11",level:4},{value:"License",id:"license-11",level:4},{value:"<del><code>monoidAll</code></del>",id:"monoidall",level:3},{value:"Signature",id:"signature-12",level:4},{value:"Details",id:"details-12",level:4},{value:"License",id:"license-12",level:4},{value:"<del><code>monoidAny</code></del>",id:"monoidany",level:3},{value:"Signature",id:"signature-13",level:4},{value:"Details",id:"details-13",level:4},{value:"License",id:"license-13",level:4},{value:"<del><code>monoidProduct</code></del>",id:"monoidproduct",level:3},{value:"Signature",id:"signature-14",level:4},{value:"Details",id:"details-14",level:4},{value:"License",id:"license-14",level:4},{value:"<del><code>monoidString</code></del>",id:"monoidstring",level:3},{value:"Signature",id:"signature-15",level:4},{value:"Details",id:"details-15",level:4},{value:"License",id:"license-15",level:4},{value:"<del><code>monoidSum</code></del>",id:"monoidsum",level:3},{value:"Signature",id:"signature-16",level:4},{value:"Details",id:"details-16",level:4},{value:"License",id:"license-16",level:4},{value:"<del><code>monoidVoid</code></del>",id:"monoidvoid",level:3},{value:"Signature",id:"signature-17",level:4},{value:"Details",id:"details-17",level:4},{value:"License",id:"license-17",level:4},{value:"<code>reverse</code>",id:"reverse",level:3},{value:"Signature",id:"signature-18",level:4},{value:"Details",id:"details-18",level:4},{value:"Example",id:"example-3",level:4},{value:"License",id:"license-18",level:4},{value:"<code>struct</code>",id:"struct",level:3},{value:"Signature",id:"signature-19",level:4},{value:"Details",id:"details-19",level:4},{value:"Example",id:"example-4",level:4},{value:"License",id:"license-19",level:4},{value:"<code>tuple</code>",id:"tuple",level:3},{value:"Signature",id:"signature-20",level:4},{value:"Details",id:"details-20",level:4},{value:"Example",id:"example-5",level:4},{value:"License",id:"license-20",level:4}];function a(e){const n={a:"a",code:"code",del:"del",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"monoid",children:"Monoid"}),"\n",(0,l.jsx)(n.h3,{id:"constructors",children:"Constructors"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#max",children:"max"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#min",children:"min"})}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"model",children:"Model"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#monoid",children:"Monoid"})}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"utilities",children:"Utilities"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#concatall",children:"concatAll"})}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.del,{children:(0,l.jsx)(n.a,{href:"#fold",children:"fold"})})," (deprecated)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.del,{children:(0,l.jsx)(n.a,{href:"#getdualmonoid",children:"getDualMonoid"})})," (deprecated)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.del,{children:(0,l.jsx)(n.a,{href:"#getendomorphismmonoid",children:"getEndomorphismMonoid"})})," (deprecated)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.del,{children:(0,l.jsx)(n.a,{href:"#getfunctionmonoid",children:"getFunctionMonoid"})})," (deprecated)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.del,{children:(0,l.jsx)(n.a,{href:"#getjoinmonoid",children:"getJoinMonoid"})})," (deprecated)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.del,{children:(0,l.jsx)(n.a,{href:"#getmeetmonoid",children:"getMeetMonoid"})})," (deprecated)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.del,{children:(0,l.jsx)(n.a,{href:"#getstructmonoid",children:"getStructMonoid"})})," (deprecated)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.del,{children:(0,l.jsx)(n.a,{href:"#gettuplemonoid",children:"getTupleMonoid"})})," (deprecated)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.del,{children:(0,l.jsx)(n.a,{href:"#monoidall",children:"monoidAll"})})," (deprecated)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.del,{children:(0,l.jsx)(n.a,{href:"#monoidany",children:"monoidAny"})})," (deprecated)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.del,{children:(0,l.jsx)(n.a,{href:"#monoidproduct",children:"monoidProduct"})})," (deprecated)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.del,{children:(0,l.jsx)(n.a,{href:"#monoidstring",children:"monoidString"})})," (deprecated)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.del,{children:(0,l.jsx)(n.a,{href:"#monoidsum",children:"monoidSum"})})," (deprecated)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.del,{children:(0,l.jsx)(n.a,{href:"#monoidvoid",children:"monoidVoid"})})," (deprecated)"]}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#reverse",children:"reverse"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#struct",children:"struct"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#tuple",children:"tuple"})}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"constructors-1",children:"Constructors"}),"\n",(0,l.jsx)(n.h3,{id:"max",children:(0,l.jsx)(n.code,{children:"max"})}),"\n",(0,l.jsxs)(n.p,{children:["Get a monoid where ",(0,l.jsx)(n.code,{children:"concat"})," will return the maximum, based on the provided bounded order."]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"empty"})," value is the ",(0,l.jsx)(n.code,{children:"bottom"})," value."]}),"\n",(0,l.jsx)(n.h4,{id:"signature",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const max: <A>(B: Bounded<A>) => Monoid<A>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import * as N from '@fp-tx/core/number'\nimport * as M from '@fp-tx/core/Monoid'\n\nconst M1 = M.max(N.Bounded)\n\nassert.deepStrictEqual(M1.concat(1, 2), 2)\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"min",children:(0,l.jsx)(n.code,{children:"min"})}),"\n",(0,l.jsxs)(n.p,{children:["Get a monoid where ",(0,l.jsx)(n.code,{children:"concat"})," will return the minimum, based on the provided bounded order."]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"empty"})," value is the ",(0,l.jsx)(n.code,{children:"top"})," value."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-1",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const min: <A>(B: Bounded<A>) => Monoid<A>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-1",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-1",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import * as N from '@fp-tx/core/number'\nimport * as M from '@fp-tx/core/Monoid'\n\nconst M1 = M.min(N.Bounded)\n\nassert.deepStrictEqual(M1.concat(1, 2), 1)\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-1",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"model-1",children:"Model"}),"\n",(0,l.jsx)(n.h3,{id:"monoid-1",children:(0,l.jsx)(n.code,{children:"Monoid"})}),"\n",(0,l.jsx)(n.h4,{id:"signature-2",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export interface Monoid<A> extends Se.Semigroup<A> {\n  readonly empty: A\n}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-2",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-2",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"utilities-1",children:"Utilities"}),"\n",(0,l.jsx)(n.h3,{id:"concatall",children:(0,l.jsx)(n.code,{children:"concatAll"})}),"\n",(0,l.jsxs)(n.p,{children:["Given a sequence of ",(0,l.jsx)(n.code,{children:"as"}),", concat them and return the total."]}),"\n",(0,l.jsxs)(n.p,{children:["If ",(0,l.jsx)(n.code,{children:"as"})," is empty, return the monoid ",(0,l.jsx)(n.code,{children:"empty"})," value."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-3",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const concatAll: <A>(M: Monoid<A>) => (as: readonly A[]) => A\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-3",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-2",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { concatAll } from '@fp-tx/core/Monoid'\nimport * as N from '@fp-tx/core/number'\n\nassert.deepStrictEqual(concatAll(N.MonoidSum)([1, 2, 3]), 6)\nassert.deepStrictEqual(concatAll(N.MonoidSum)([]), 0)\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-3",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"fold",children:(0,l.jsx)(n.del,{children:(0,l.jsx)(n.code,{children:"fold"})})}),"\n",(0,l.jsxs)(n.p,{children:["Use ",(0,l.jsx)(n.a,{href:"#concatall",children:(0,l.jsx)(n.code,{children:"concatAll"})})," instead."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-4",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const fold: <A>(M: Monoid<A>) => (as: readonly A[]) => A\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-4",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"Deprecated"})}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-4",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"getdualmonoid",children:(0,l.jsx)(n.del,{children:(0,l.jsx)(n.code,{children:"getDualMonoid"})})}),"\n",(0,l.jsxs)(n.p,{children:["Use ",(0,l.jsx)(n.a,{href:"#reverse",children:(0,l.jsx)(n.code,{children:"reverse"})})," instead."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-5",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const getDualMonoid: <A>(M: Monoid<A>) => Monoid<A>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-5",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"Deprecated"})}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-5",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"getendomorphismmonoid",children:(0,l.jsx)(n.del,{children:(0,l.jsx)(n.code,{children:"getEndomorphismMonoid"})})}),"\n",(0,l.jsxs)(n.p,{children:["Use ",(0,l.jsx)(n.a,{href:"./function#getendomorphismmonoid",children:(0,l.jsx)(n.code,{children:"getEndomorphismMonoid"})})," instead."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Note"}),". The execution order in ",(0,l.jsx)(n.a,{href:"./function#getendomorphismmonoid",children:(0,l.jsx)(n.code,{children:"getEndomorphismMonoid"})})," is reversed."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-6",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const getEndomorphismMonoid: <A = never>() => Monoid<Endomorphism<A>>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-6",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"Deprecated"})}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-6",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"getfunctionmonoid",children:(0,l.jsx)(n.del,{children:(0,l.jsx)(n.code,{children:"getFunctionMonoid"})})}),"\n",(0,l.jsxs)(n.p,{children:["Use ",(0,l.jsx)(n.a,{href:"./function#getmonoid",children:(0,l.jsx)(n.code,{children:"getMonoid"})})," instead."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-7",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const getFunctionMonoid: <M>(M: Monoid<M>) => <A = never>() => Monoid<(a: A) => M>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-7",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"Deprecated"})}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-7",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"getjoinmonoid",children:(0,l.jsx)(n.del,{children:(0,l.jsx)(n.code,{children:"getJoinMonoid"})})}),"\n",(0,l.jsxs)(n.p,{children:["Use ",(0,l.jsx)(n.a,{href:"#max",children:(0,l.jsx)(n.code,{children:"max"})})," instead."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-8",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const getJoinMonoid: <A>(B: Bounded<A>) => Monoid<A>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-8",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"Deprecated"})}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-8",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"getmeetmonoid",children:(0,l.jsx)(n.del,{children:(0,l.jsx)(n.code,{children:"getMeetMonoid"})})}),"\n",(0,l.jsxs)(n.p,{children:["Use ",(0,l.jsx)(n.a,{href:"#min",children:(0,l.jsx)(n.code,{children:"min"})})," instead."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-9",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const getMeetMonoid: <A>(B: Bounded<A>) => Monoid<A>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-9",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"Deprecated"})}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-9",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"getstructmonoid",children:(0,l.jsx)(n.del,{children:(0,l.jsx)(n.code,{children:"getStructMonoid"})})}),"\n",(0,l.jsxs)(n.p,{children:["Use ",(0,l.jsx)(n.a,{href:"#struct",children:(0,l.jsx)(n.code,{children:"struct"})})," instead."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-10",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const getStructMonoid: <O extends ReadonlyRecord<string, any>>(monoids: {\n  [K in keyof O]: Monoid<O[K]>\n}) => Monoid<O>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-10",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"Deprecated"})}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-10",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"gettuplemonoid",children:(0,l.jsx)(n.del,{children:(0,l.jsx)(n.code,{children:"getTupleMonoid"})})}),"\n",(0,l.jsxs)(n.p,{children:["Use ",(0,l.jsx)(n.a,{href:"#tuple",children:(0,l.jsx)(n.code,{children:"tuple"})})," instead."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-11",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const getTupleMonoid: <T extends ReadonlyArray<Monoid<any>>>(\n  ...monoids: T\n) => Monoid<{\n  [K in keyof T]: T[K] extends Se.Semigroup<infer A> ? A : never\n}>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-11",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"Deprecated"})}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-11",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"monoidall",children:(0,l.jsx)(n.del,{children:(0,l.jsx)(n.code,{children:"monoidAll"})})}),"\n",(0,l.jsxs)(n.p,{children:["Use ",(0,l.jsx)(n.a,{href:"./boolean#monoidall",children:(0,l.jsx)(n.code,{children:"MonoidAll"})})," instead."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-12",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const monoidAll: Monoid<boolean>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-12",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"Deprecated"})}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-12",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"monoidany",children:(0,l.jsx)(n.del,{children:(0,l.jsx)(n.code,{children:"monoidAny"})})}),"\n",(0,l.jsxs)(n.p,{children:["Use ",(0,l.jsx)(n.a,{href:"./boolean#monoidany",children:(0,l.jsx)(n.code,{children:"MonoidAny"})})," instead."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-13",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const monoidAny: Monoid<boolean>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-13",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"Deprecated"})}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-13",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"monoidproduct",children:(0,l.jsx)(n.del,{children:(0,l.jsx)(n.code,{children:"monoidProduct"})})}),"\n",(0,l.jsxs)(n.p,{children:["Use ",(0,l.jsx)(n.a,{href:"./number#monoidproduct",children:(0,l.jsx)(n.code,{children:"MonoidProduct"})})," instead."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-14",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const monoidProduct: Monoid<number>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-14",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"Deprecated"})}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-14",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"monoidstring",children:(0,l.jsx)(n.del,{children:(0,l.jsx)(n.code,{children:"monoidString"})})}),"\n",(0,l.jsxs)(n.p,{children:["Use ",(0,l.jsx)(n.a,{href:"./string#monoid",children:(0,l.jsx)(n.code,{children:"Monoid"})})," instead."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-15",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const monoidString: Monoid<string>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-15",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"Deprecated"})}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-15",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"monoidsum",children:(0,l.jsx)(n.del,{children:(0,l.jsx)(n.code,{children:"monoidSum"})})}),"\n",(0,l.jsxs)(n.p,{children:["Use ",(0,l.jsx)(n.a,{href:"./number#monoidsum",children:(0,l.jsx)(n.code,{children:"MonoidSum"})})," instead."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-16",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const monoidSum: Monoid<number>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-16",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"Deprecated"})}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-16",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"monoidvoid",children:(0,l.jsx)(n.del,{children:(0,l.jsx)(n.code,{children:"monoidVoid"})})}),"\n",(0,l.jsxs)(n.p,{children:["Use ",(0,l.jsx)(n.a,{href:"./void#monoid",children:(0,l.jsx)(n.code,{children:"Monoid"})})," instead."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-17",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const monoidVoid: Monoid<void>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-17",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.strong,{children:"Deprecated"})}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"license-17",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"reverse",children:(0,l.jsx)(n.code,{children:"reverse"})}),"\n",(0,l.jsxs)(n.p,{children:["The dual of a ",(0,l.jsx)(n.code,{children:"Monoid"}),", obtained by swapping the arguments of ",(0,l.jsx)(n.code,{children:"concat"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"signature-18",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const reverse: <A>(M: Monoid<A>) => Monoid<A>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-18",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-3",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { reverse } from '@fp-tx/core/Monoid'\nimport * as S from '@fp-tx/core/string'\n\nassert.deepStrictEqual(reverse(S.Monoid).concat('a', 'b'), 'ba')\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-18",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"struct",children:(0,l.jsx)(n.code,{children:"struct"})}),"\n",(0,l.jsx)(n.p,{children:"Given a struct of monoids returns a monoid for the struct."}),"\n",(0,l.jsx)(n.h4,{id:"signature-19",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const struct: <A>(monoids: { [K in keyof A]: Monoid<A[K]> }) => Monoid<{\n  readonly [K_1 in keyof A]: A[K_1]\n}>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-19",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-4",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { struct } from '@fp-tx/core/Monoid'\nimport * as N from '@fp-tx/core/number'\n\ninterface Point {\n  readonly x: number\n  readonly y: number\n}\n\nconst M = struct<Point>({\n  x: N.MonoidSum,\n  y: N.MonoidSum,\n})\n\nassert.deepStrictEqual(M.concat({ x: 1, y: 2 }, { x: 3, y: 4 }), { x: 4, y: 6 })\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-19",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"tuple",children:(0,l.jsx)(n.code,{children:"tuple"})}),"\n",(0,l.jsx)(n.p,{children:"Given a tuple of monoids returns a monoid for the tuple."}),"\n",(0,l.jsx)(n.h4,{id:"signature-20",children:"Signature"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"export declare const tuple: <A extends readonly unknown[]>(\n  ...monoids: { [K in keyof A]: Monoid<A[K]> }\n) => Monoid<Readonly<A>>\n"})}),"\n",(0,l.jsx)(n.h4,{id:"details-20",children:"Details"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Added in 0.1.0"}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example-5",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"import { tuple } from '@fp-tx/core/Monoid'\nimport * as B from '@fp-tx/core/boolean'\nimport * as N from '@fp-tx/core/number'\nimport * as S from '@fp-tx/core/string'\n\nconst M1 = tuple(S.Monoid, N.MonoidSum)\nassert.deepStrictEqual(M1.concat(['a', 1], ['b', 2]), ['ab', 3])\n\nconst M2 = tuple(S.Monoid, N.MonoidSum, B.MonoidAll)\nassert.deepStrictEqual(M2.concat(['a', 1, true], ['b', 2, false]), ['ab', 3, false])\n\n"})}),"\n",(0,l.jsx)(n.h4,{id:"license-20",children:"License"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"MIT \u2013 Copyright (c) 2017-present Giulio Canti"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},9779:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var l=i(9474);const d={},s=l.createContext(d);function r(e){const n=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:r(e.components),l.createElement(s.Provider,{value:n},e.children)}}}]);